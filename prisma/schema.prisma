// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "cockroachdb"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("DATABASE_SHADOW_URL")
}

model GasRefund {
  id            String   @id @default(uuid())
  accessCode    String   @unique
  walletAddress String?  @unique
  transactions  String[]
  email         String?  @unique
  updatedAt     DateTime @default(now()) @updatedAt
}

model User {
  id                  String                @id @default(uuid())
  handle              String                @unique
  name                String?
  email               String?               @unique
  emailVerified       DateTime?
  imageUrl            String?
  createdAt           DateTime              @default(now())
  updatedAt           DateTime              @updatedAt
  Authenticators      DeviceAuthenticator[]
  SmartContractWallet SmartContractWallet[]
}

model DeviceAuthenticator {
  id                   String     @id @default(uuid())
  deviceName           String
  credentialId         String     @unique
  credentialPublicKey  String     @unique
  counter              Int
  credentialDeviceType String
  credentialBackedUp   Boolean
  rawAttestation       String
  transports           String[]
  createdAt            DateTime   @default(now())
  updatedAt            DateTime   @updatedAt
  userId               String
  User                 User       @relation(fields: [userId], references: [id])
  EoaWallet            EoaWallet?

  @@unique([credentialId, credentialPublicKey])
  @@unique([userId, deviceName])
}

model SmartContractWallet {
  id                         String                       @id @default(uuid())
  creationSalt               String                       @unique
  address                    String                       @unique
  type                       String
  createdAt                  DateTime                     @default(now())
  updatedAt                  DateTime                     @updatedAt
  userId                     String
  User                       User                         @relation(fields: [userId], references: [id])
  SmartContractWalletDetails SmartContractWalletDetails[]
}

model SmartContractWalletDetails {
  id                    String              @id @default(uuid())
  chain                 String
  smartContractWalletId String
  deploymentHash        String              @unique
  deployedAt            DateTime
  SmartContractWallet   SmartContractWallet @relation(fields: [smartContractWalletId], references: [id])
  Tokens                Tokens[]

  @@unique([chain, smartContractWalletId])
}

model Tokens {
  id                           String                     @id @default(uuid())
  contractAddress              String
  symbol                       String
  name                         String
  logoUri                      String
  chain                        Decimal
  decimals                     Decimal
  smartContractWalletDetailsId String
  SmartContractWalletDetails   SmartContractWalletDetails @relation(fields: [smartContractWalletDetailsId], references: [id])
  createdAt                    DateTime                   @default(now())
  updatedAt                    DateTime                   @updatedAt
}

model EoaWallet {
  id                    String              @id @default(uuid())
  createdAt             DateTime            @default(now())
  updatedAt             DateTime            @updatedAt
  address               String
  privateKey            String?
  deviceAuthenticatorId String              @unique
  DeviceAuthenticator   DeviceAuthenticator @relation(fields: [deviceAuthenticatorId], references: [id])
}

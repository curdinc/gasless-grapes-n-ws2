{
	"id": "c4e0158af4ae804d293e6c3c7a83c799",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/WalletV2.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.7;\nimport \"@openzeppelin/contracts/proxy/utils/Initializable.sol\";\n\ncontract Wallet is Initializable {\n    uint public lastUsed = 0;\n\n    function initialize() external initializer {\n\n    }\n    \n    function add(uint256 a, uint256 b) public returns(uint256 c) {\n        c = a + b;\n        lastUsed = c;\n    }\n\n    function zero() public {\n        lastUsed = 0;\n    }\n}"
			},
			"@openzeppelin/contracts/proxy/utils/Initializable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.2;\n\nimport \"../../utils/Address.sol\";\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Indicates that the contract has been initialized.\n     * @custom:oz-retyped-from bool\n     */\n    uint8 private _initialized;\n\n    /**\n     * @dev Indicates that the contract is in the process of being initialized.\n     */\n    bool private _initializing;\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint8 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\n     * constructor.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        bool isTopLevelCall = !_initializing;\n        require(\n            (isTopLevelCall && _initialized < 1) || (!Address.isContract(address(this)) && _initialized == 1),\n            \"Initializable: contract is already initialized\"\n        );\n        _initialized = 1;\n        if (isTopLevelCall) {\n            _initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            _initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint8 version) {\n        require(!_initializing && _initialized < version, \"Initializable: contract is already initialized\");\n        _initialized = version;\n        _initializing = true;\n        _;\n        _initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        require(_initializing, \"Initializable: contract is not initializing\");\n        _;\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        require(!_initializing, \"Initializable: contract is initializing\");\n        if (_initialized < type(uint8).max) {\n            _initialized = type(uint8).max;\n            emit Initialized(type(uint8).max);\n        }\n    }\n\n    /**\n     * @dev Internal function that returns the initialized version. Returns `_initialized`\n     */\n    function _getInitializedVersion() internal view returns (uint8) {\n        return _initialized;\n    }\n\n    /**\n     * @dev Internal function that returns the initialized version. Returns `_initializing`\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _initializing;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/proxy/utils/Initializable.sol": {
				"Initializable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"custom:oz-upgrades-unsafe-allow": "constructor constructor() {     _disableInitializers(); } ``` ====",
						"details": "This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ``` contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\"MyToken\", \"MTK\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\"MyToken\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```",
						"events": {
							"Initialized(uint8)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"_initialized": {
								"custom:oz-retyped-from": "bool",
								"details": "Indicates that the contract has been initialized."
							},
							"_initializing": {
								"details": "Indicates that the contract is in the process of being initialized."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ``` contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_initialized\":{\"custom:oz-retyped-from\":\"bool\",\"details\":\"Indicates that the contract has been initialized.\"},\"_initializing\":{\"details\":\"Indicates that the contract is in the process of being initialized.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xcee5467d5d873fb75dae6f98c01a8d25dd609f9d0374c7d39217bd5f9539a2d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://546651335214a63d1ea3b1d3297228a1df2165f17063b2e45b589ade861ddedc\",\"dweb:/ipfs/QmNwpHiPBRB6dmNz9WLVYvy2kUhYHZgWBMWRcoDuMsuZt9\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 6,
								"contract": "@openzeppelin/contracts/proxy/utils/Initializable.sol:Initializable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 9,
								"contract": "@openzeppelin/contracts/proxy/utils/Initializable.sol:Initializable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":194:9158  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":194:9158  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220707b19f8ce8fee8f6afc7520aba0995f8916b0cf807093a219746de5a8d7065664736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220707b19f8ce8fee8f6afc7520aba0995f8916b0cf807093a219746de5a8d7065664736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH17 0x7B19F8CE8FEE8F6AFC7520ABA0995F8916 0xB0 0xCF DUP1 PUSH17 0x93A219746DE5A8D7065664736F6C634300 ADDMOD SMOD STOP CALLER ",
							"sourceMap": "194:8964:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220707b19f8ce8fee8f6afc7520aba0995f8916b0cf807093a219746de5a8d7065664736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH17 0x7B19F8CE8FEE8F6AFC7520ABA0995F8916 0xB0 0xCF DUP1 PUSH17 0x93A219746DE5A8D7065664736F6C634300 ADDMOD SMOD STOP CALLER ",
							"sourceMap": "194:8964:1:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_revert(bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "BYTE",
									"source": 1
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "ADDRESS",
									"source": 1
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "MSTORE8",
									"source": 1
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220707b19f8ce8fee8f6afc7520aba0995f8916b0cf807093a219746de5a8d7065664736f6c63430008070033",
									".code": [
										{
											"begin": 194,
											"end": 9158,
											"name": "PUSHDEPLOYADDRESS",
											"source": 1
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/WalletV2.sol": {
				"Wallet": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "a",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "b",
									"type": "uint256"
								}
							],
							"name": "add",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "c",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lastUsed",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "zero",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/WalletV2.sol\":120:420  contract Wallet is Initializable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/WalletV2.sol\":182:183  0 */\n  0x00\n    /* \"contracts/WalletV2.sol\":159:183  uint public lastUsed = 0 */\n  0x01\n  sstore\n    /* \"contracts/WalletV2.sol\":120:420  contract Wallet is Initializable {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/WalletV2.sol\":120:420  contract Wallet is Initializable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x771602f7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x8129fc1c\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x94033ebd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xbc1b392d\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/WalletV2.sol\":251:360  function add(uint256 a, uint256 b) public returns(uint256 c) {... */\n    tag_3:\n      tag_7\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_8\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_8:\n      tag_10\n      jump\t// in\n    tag_7:\n      mload(0x40)\n      tag_11\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/WalletV2.sol\":190:241  function initialize() external initializer {... */\n    tag_4:\n      tag_13\n      tag_14\n      jump\t// in\n    tag_13:\n      stop\n        /* \"contracts/WalletV2.sol\":159:183  uint public lastUsed = 0 */\n    tag_5:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/WalletV2.sol\":366:418  function zero() public {... */\n    tag_6:\n      tag_18\n      tag_19\n      jump\t// in\n    tag_18:\n      stop\n        /* \"contracts/WalletV2.sol\":251:360  function add(uint256 a, uint256 b) public returns(uint256 c) {... */\n    tag_10:\n        /* \"contracts/WalletV2.sol\":301:310  uint256 c */\n      0x00\n        /* \"contracts/WalletV2.sol\":330:331  b */\n      dup2\n        /* \"contracts/WalletV2.sol\":326:327  a */\n      dup4\n        /* \"contracts/WalletV2.sol\":326:331  a + b */\n      tag_21\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n        /* \"contracts/WalletV2.sol\":322:331  c = a + b */\n      swap1\n      pop\n        /* \"contracts/WalletV2.sol\":352:353  c */\n      dup1\n        /* \"contracts/WalletV2.sol\":341:349  lastUsed */\n      0x01\n        /* \"contracts/WalletV2.sol\":341:353  lastUsed = c */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/WalletV2.sol\":251:360  function add(uint256 a, uint256 b) public returns(uint256 c) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/WalletV2.sol\":190:241  function initialize() external initializer {... */\n    tag_14:\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":3257:3276  bool isTopLevelCall */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":3280:3293  _initializing */\n      dup1\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":3279:3293  !_initializing */\n      iszero\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":3257:3293  bool isTopLevelCall = !_initializing */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":3325:3339  isTopLevelCall */\n      dup1\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":3325:3359  isTopLevelCall && _initialized < 1 */\n      dup1\n      iszero\n      tag_24\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":3358:3359  1 */\n      0x01\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":3343:3355  _initialized */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":3343:3359  _initialized < 1 */\n      0xff\n      and\n      lt\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":3325:3359  isTopLevelCall && _initialized < 1 */\n    tag_24:\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":3324:3421  (isTopLevelCall && _initialized < 1) || (!Address.isContract(address(this)) && _initialized == 1) */\n      dup1\n      tag_25\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":3366:3399  Address.isContract(address(this)) */\n      tag_26\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":3393:3397  this */\n      address\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":3366:3384  Address.isContract */\n      tag_27\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":3366:3399  Address.isContract(address(this)) */\n      jump\t// in\n    tag_26:\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":3365:3399  !Address.isContract(address(this)) */\n      iszero\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":3365:3420  !Address.isContract(address(this)) && _initialized == 1 */\n      dup1\n      iszero\n      tag_28\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":3419:3420  1 */\n      0x01\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":3403:3415  _initialized */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":3403:3420  _initialized == 1 */\n      0xff\n      and\n      eq\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":3365:3420  !Address.isContract(address(this)) && _initialized == 1 */\n    tag_28:\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":3324:3421  (isTopLevelCall && _initialized < 1) || (!Address.isContract(address(this)) && _initialized == 1) */\n    tag_25:\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":3303:3493  require(... */\n      tag_29\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_30\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_29:\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":3518:3519  1 */\n      0x01\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":3503:3515  _initialized */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":3503:3519  _initialized = 1 */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":3533:3547  isTopLevelCall */\n      dup1\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":3529:3594  if (isTopLevelCall) {... */\n      iszero\n      tag_32\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":3579:3583  true */\n      0x01\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":3563:3576  _initializing */\n      0x00\n      0x01\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":3563:3583  _initializing = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":3529:3594  if (isTopLevelCall) {... */\n    tag_32:\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":3618:3632  isTopLevelCall */\n      dup1\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":3614:3713  if (isTopLevelCall) {... */\n      iszero\n      tag_34\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":3664:3669  false */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":3648:3661  _initializing */\n      dup1\n      0x01\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":3648:3669  _initializing = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":3688:3702  Initialized(1) */\n      0x7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":3700:3701  1 */\n      0x01\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":3688:3702  Initialized(1) */\n      mload(0x40)\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":3614:3713  if (isTopLevelCall) {... */\n    tag_34:\n        /* \"@openzeppelin/contracts/proxy/utils/Initializable.sol\":3247:3719  {... */\n      pop\n        /* \"contracts/WalletV2.sol\":190:241  function initialize() external initializer {... */\n      jump\t// out\n        /* \"contracts/WalletV2.sol\":159:183  uint public lastUsed = 0 */\n    tag_16:\n      sload(0x01)\n      dup2\n      jump\t// out\n        /* \"contracts/WalletV2.sol\":366:418  function zero() public {... */\n    tag_19:\n        /* \"contracts/WalletV2.sol\":410:411  0 */\n      0x00\n        /* \"contracts/WalletV2.sol\":399:407  lastUsed */\n      0x01\n        /* \"contracts/WalletV2.sol\":399:411  lastUsed = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/WalletV2.sol\":366:418  function zero() public {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1175:1495  function isContract(address account) internal view returns (bool) {... */\n    tag_27:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1235:1239  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1487:1488  0 */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1472  account */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1484  account.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1488  account.code.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1458:1488  return account.code.length > 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1175:1495  function isContract(address account) internal view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_40:\n        /* \"#utility.yul\":53:58   */\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_42\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_43\n      jump\t// in\n    tag_42:\n        /* \"#utility.yul\":7:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:626   */\n    tag_9:\n        /* \"#utility.yul\":220:226   */\n      0x00\n        /* \"#utility.yul\":228:234   */\n      dup1\n        /* \"#utility.yul\":277:279   */\n      0x40\n        /* \"#utility.yul\":265:274   */\n      dup4\n        /* \"#utility.yul\":256:263   */\n      dup6\n        /* \"#utility.yul\":252:275   */\n      sub\n        /* \"#utility.yul\":248:280   */\n      slt\n        /* \"#utility.yul\":245:364   */\n      iszero\n      tag_45\n      jumpi\n        /* \"#utility.yul\":283:362   */\n      tag_46\n      tag_47\n      jump\t// in\n    tag_46:\n        /* \"#utility.yul\":245:364   */\n    tag_45:\n        /* \"#utility.yul\":403:404   */\n      0x00\n        /* \"#utility.yul\":428:481   */\n      tag_48\n        /* \"#utility.yul\":473:480   */\n      dup6\n        /* \"#utility.yul\":464:470   */\n      dup3\n        /* \"#utility.yul\":453:462   */\n      dup7\n        /* \"#utility.yul\":449:471   */\n      add\n        /* \"#utility.yul\":428:481   */\n      tag_40\n      jump\t// in\n    tag_48:\n        /* \"#utility.yul\":418:481   */\n      swap3\n      pop\n        /* \"#utility.yul\":374:491   */\n      pop\n        /* \"#utility.yul\":530:532   */\n      0x20\n        /* \"#utility.yul\":556:609   */\n      tag_49\n        /* \"#utility.yul\":601:608   */\n      dup6\n        /* \"#utility.yul\":592:598   */\n      dup3\n        /* \"#utility.yul\":581:590   */\n      dup7\n        /* \"#utility.yul\":577:599   */\n      add\n        /* \"#utility.yul\":556:609   */\n      tag_40\n      jump\t// in\n    tag_49:\n        /* \"#utility.yul\":546:609   */\n      swap2\n      pop\n        /* \"#utility.yul\":501:619   */\n      pop\n        /* \"#utility.yul\":152:626   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":632:775   */\n    tag_50:\n        /* \"#utility.yul\":725:768   */\n      tag_52\n        /* \"#utility.yul\":762:767   */\n      dup2\n        /* \"#utility.yul\":725:768   */\n      tag_53\n      jump\t// in\n    tag_52:\n        /* \"#utility.yul\":720:723   */\n      dup3\n        /* \"#utility.yul\":713:769   */\n      mstore\n        /* \"#utility.yul\":632:775   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":781:1147   */\n    tag_54:\n        /* \"#utility.yul\":923:926   */\n      0x00\n        /* \"#utility.yul\":944:1011   */\n      tag_56\n        /* \"#utility.yul\":1008:1010   */\n      0x2e\n        /* \"#utility.yul\":1003:1006   */\n      dup4\n        /* \"#utility.yul\":944:1011   */\n      tag_57\n      jump\t// in\n    tag_56:\n        /* \"#utility.yul\":937:1011   */\n      swap2\n      pop\n        /* \"#utility.yul\":1020:1113   */\n      tag_58\n        /* \"#utility.yul\":1109:1112   */\n      dup3\n        /* \"#utility.yul\":1020:1113   */\n      tag_59\n      jump\t// in\n    tag_58:\n        /* \"#utility.yul\":1138:1140   */\n      0x40\n        /* \"#utility.yul\":1133:1136   */\n      dup3\n        /* \"#utility.yul\":1129:1141   */\n      add\n        /* \"#utility.yul\":1122:1141   */\n      swap1\n      pop\n        /* \"#utility.yul\":781:1147   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1153:1271   */\n    tag_60:\n        /* \"#utility.yul\":1240:1264   */\n      tag_62\n        /* \"#utility.yul\":1258:1263   */\n      dup2\n        /* \"#utility.yul\":1240:1264   */\n      tag_63\n      jump\t// in\n    tag_62:\n        /* \"#utility.yul\":1235:1238   */\n      dup3\n        /* \"#utility.yul\":1228:1265   */\n      mstore\n        /* \"#utility.yul\":1153:1271   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1277:1511   */\n    tag_36:\n        /* \"#utility.yul\":1376:1380   */\n      0x00\n        /* \"#utility.yul\":1414:1416   */\n      0x20\n        /* \"#utility.yul\":1403:1412   */\n      dup3\n        /* \"#utility.yul\":1399:1417   */\n      add\n        /* \"#utility.yul\":1391:1417   */\n      swap1\n      pop\n        /* \"#utility.yul\":1427:1504   */\n      tag_65\n        /* \"#utility.yul\":1501:1502   */\n      0x00\n        /* \"#utility.yul\":1490:1499   */\n      dup4\n        /* \"#utility.yul\":1486:1503   */\n      add\n        /* \"#utility.yul\":1477:1483   */\n      dup5\n        /* \"#utility.yul\":1427:1504   */\n      tag_50\n      jump\t// in\n    tag_65:\n        /* \"#utility.yul\":1277:1511   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1517:1936   */\n    tag_31:\n        /* \"#utility.yul\":1683:1687   */\n      0x00\n        /* \"#utility.yul\":1721:1723   */\n      0x20\n        /* \"#utility.yul\":1710:1719   */\n      dup3\n        /* \"#utility.yul\":1706:1724   */\n      add\n        /* \"#utility.yul\":1698:1724   */\n      swap1\n      pop\n        /* \"#utility.yul\":1770:1779   */\n      dup2\n        /* \"#utility.yul\":1764:1768   */\n      dup2\n        /* \"#utility.yul\":1760:1780   */\n      sub\n        /* \"#utility.yul\":1756:1757   */\n      0x00\n        /* \"#utility.yul\":1745:1754   */\n      dup4\n        /* \"#utility.yul\":1741:1758   */\n      add\n        /* \"#utility.yul\":1734:1781   */\n      mstore\n        /* \"#utility.yul\":1798:1929   */\n      tag_67\n        /* \"#utility.yul\":1924:1928   */\n      dup2\n        /* \"#utility.yul\":1798:1929   */\n      tag_54\n      jump\t// in\n    tag_67:\n        /* \"#utility.yul\":1790:1929   */\n      swap1\n      pop\n        /* \"#utility.yul\":1517:1936   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1942:2164   */\n    tag_12:\n        /* \"#utility.yul\":2035:2039   */\n      0x00\n        /* \"#utility.yul\":2073:2075   */\n      0x20\n        /* \"#utility.yul\":2062:2071   */\n      dup3\n        /* \"#utility.yul\":2058:2076   */\n      add\n        /* \"#utility.yul\":2050:2076   */\n      swap1\n      pop\n        /* \"#utility.yul\":2086:2157   */\n      tag_69\n        /* \"#utility.yul\":2154:2155   */\n      0x00\n        /* \"#utility.yul\":2143:2152   */\n      dup4\n        /* \"#utility.yul\":2139:2156   */\n      add\n        /* \"#utility.yul\":2130:2136   */\n      dup5\n        /* \"#utility.yul\":2086:2157   */\n      tag_60\n      jump\t// in\n    tag_69:\n        /* \"#utility.yul\":1942:2164   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2251:2420   */\n    tag_57:\n        /* \"#utility.yul\":2335:2346   */\n      0x00\n        /* \"#utility.yul\":2369:2375   */\n      dup3\n        /* \"#utility.yul\":2364:2367   */\n      dup3\n        /* \"#utility.yul\":2357:2376   */\n      mstore\n        /* \"#utility.yul\":2409:2413   */\n      0x20\n        /* \"#utility.yul\":2404:2407   */\n      dup3\n        /* \"#utility.yul\":2400:2414   */\n      add\n        /* \"#utility.yul\":2385:2414   */\n      swap1\n      pop\n        /* \"#utility.yul\":2251:2420   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2426:2731   */\n    tag_22:\n        /* \"#utility.yul\":2466:2469   */\n      0x00\n        /* \"#utility.yul\":2485:2505   */\n      tag_74\n        /* \"#utility.yul\":2503:2504   */\n      dup3\n        /* \"#utility.yul\":2485:2505   */\n      tag_63\n      jump\t// in\n    tag_74:\n        /* \"#utility.yul\":2480:2505   */\n      swap2\n      pop\n        /* \"#utility.yul\":2519:2539   */\n      tag_75\n        /* \"#utility.yul\":2537:2538   */\n      dup4\n        /* \"#utility.yul\":2519:2539   */\n      tag_63\n      jump\t// in\n    tag_75:\n        /* \"#utility.yul\":2514:2539   */\n      swap3\n      pop\n        /* \"#utility.yul\":2673:2674   */\n      dup3\n        /* \"#utility.yul\":2605:2671   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2601:2675   */\n      sub\n        /* \"#utility.yul\":2598:2599   */\n      dup3\n        /* \"#utility.yul\":2595:2676   */\n      gt\n        /* \"#utility.yul\":2592:2699   */\n      iszero\n      tag_76\n      jumpi\n        /* \"#utility.yul\":2679:2697   */\n      tag_77\n      tag_78\n      jump\t// in\n    tag_77:\n        /* \"#utility.yul\":2592:2699   */\n    tag_76:\n        /* \"#utility.yul\":2723:2724   */\n      dup3\n        /* \"#utility.yul\":2720:2721   */\n      dup3\n        /* \"#utility.yul\":2716:2725   */\n      add\n        /* \"#utility.yul\":2709:2725   */\n      swap1\n      pop\n        /* \"#utility.yul\":2426:2731   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2737:2814   */\n    tag_63:\n        /* \"#utility.yul\":2774:2781   */\n      0x00\n        /* \"#utility.yul\":2803:2808   */\n      dup2\n        /* \"#utility.yul\":2792:2808   */\n      swap1\n      pop\n        /* \"#utility.yul\":2737:2814   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2820:2906   */\n    tag_80:\n        /* \"#utility.yul\":2855:2862   */\n      0x00\n        /* \"#utility.yul\":2895:2899   */\n      0xff\n        /* \"#utility.yul\":2888:2893   */\n      dup3\n        /* \"#utility.yul\":2884:2900   */\n      and\n        /* \"#utility.yul\":2873:2900   */\n      swap1\n      pop\n        /* \"#utility.yul\":2820:2906   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2912:3029   */\n    tag_53:\n        /* \"#utility.yul\":2968:2977   */\n      0x00\n        /* \"#utility.yul\":3001:3023   */\n      tag_83\n        /* \"#utility.yul\":3017:3022   */\n      dup3\n        /* \"#utility.yul\":3001:3023   */\n      tag_80\n      jump\t// in\n    tag_83:\n        /* \"#utility.yul\":2988:3023   */\n      swap1\n      pop\n        /* \"#utility.yul\":2912:3029   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3035:3215   */\n    tag_78:\n        /* \"#utility.yul\":3083:3160   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3080:3081   */\n      0x00\n        /* \"#utility.yul\":3073:3161   */\n      mstore\n        /* \"#utility.yul\":3180:3184   */\n      0x11\n        /* \"#utility.yul\":3177:3178   */\n      0x04\n        /* \"#utility.yul\":3170:3185   */\n      mstore\n        /* \"#utility.yul\":3204:3208   */\n      0x24\n        /* \"#utility.yul\":3201:3202   */\n      0x00\n        /* \"#utility.yul\":3194:3209   */\n      revert\n        /* \"#utility.yul\":3344:3461   */\n    tag_47:\n        /* \"#utility.yul\":3453:3454   */\n      0x00\n        /* \"#utility.yul\":3450:3451   */\n      dup1\n        /* \"#utility.yul\":3443:3455   */\n      revert\n        /* \"#utility.yul\":3467:3700   */\n    tag_59:\n        /* \"#utility.yul\":3607:3641   */\n      0x496e697469616c697a61626c653a20636f6e747261637420697320616c726561\n        /* \"#utility.yul\":3603:3604   */\n      0x00\n        /* \"#utility.yul\":3595:3601   */\n      dup3\n        /* \"#utility.yul\":3591:3605   */\n      add\n        /* \"#utility.yul\":3584:3642   */\n      mstore\n        /* \"#utility.yul\":3676:3692   */\n      0x647920696e697469616c697a6564000000000000000000000000000000000000\n        /* \"#utility.yul\":3671:3673   */\n      0x20\n        /* \"#utility.yul\":3663:3669   */\n      dup3\n        /* \"#utility.yul\":3659:3674   */\n      add\n        /* \"#utility.yul\":3652:3693   */\n      mstore\n        /* \"#utility.yul\":3467:3700   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3706:3828   */\n    tag_43:\n        /* \"#utility.yul\":3779:3803   */\n      tag_90\n        /* \"#utility.yul\":3797:3802   */\n      dup2\n        /* \"#utility.yul\":3779:3803   */\n      tag_63\n      jump\t// in\n    tag_90:\n        /* \"#utility.yul\":3772:3777   */\n      dup2\n        /* \"#utility.yul\":3769:3804   */\n      eq\n        /* \"#utility.yul\":3759:3822   */\n      tag_91\n      jumpi\n        /* \"#utility.yul\":3818:3819   */\n      0x00\n        /* \"#utility.yul\":3815:3816   */\n      dup1\n        /* \"#utility.yul\":3808:3820   */\n      revert\n        /* \"#utility.yul\":3759:3822   */\n    tag_91:\n        /* \"#utility.yul\":3706:3828   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212206ea5971f7ddc77aa2dadb99d09ddccd9628728fa49e11ad6093456fcbadcff6864736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052600060015534801561001557600080fd5b50610485806100256000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c8063771602f7146100515780638129fc1c1461008157806394033ebd1461008b578063bc1b392d146100a9575b600080fd5b61006b6004803603810190610066919061024e565b6100b3565b604051610078919061030a565b60405180910390f35b6100896100d0565b005b610093610206565b6040516100a0919061030a565b60405180910390f35b6100b161020c565b005b600081836100c19190610336565b90508060018190555092915050565b60008060019054906101000a900460ff161590508080156101015750600160008054906101000a900460ff1660ff16105b8061012e575061011030610216565b15801561012d5750600160008054906101000a900460ff1660ff16145b5b61016d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610164906102ea565b60405180910390fd5b60016000806101000a81548160ff021916908360ff16021790555080156101aa576001600060016101000a81548160ff0219169083151502179055505b80156102035760008060016101000a81548160ff0219169083151502179055507f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb384740249860016040516101fa91906102cf565b60405180910390a15b50565b60015481565b6000600181905550565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b60008135905061024881610438565b92915050565b60008060408385031215610265576102646103e4565b5b600061027385828601610239565b925050602061028485828601610239565b9150509250929050565b610297816103a3565b82525050565b60006102aa602e83610325565b91506102b5826103e9565b604082019050919050565b6102c98161038c565b82525050565b60006020820190506102e4600083018461028e565b92915050565b600060208201905081810360008301526103038161029d565b9050919050565b600060208201905061031f60008301846102c0565b92915050565b600082825260208201905092915050565b60006103418261038c565b915061034c8361038c565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610381576103806103b5565b5b828201905092915050565b6000819050919050565b600060ff82169050919050565b60006103ae82610396565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600080fd5b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b6104418161038c565b811461044c57600080fd5b5056fea26469706673582212206ea5971f7ddc77aa2dadb99d09ddccd9628728fa49e11ad6093456fcbadcff6864736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 PUSH1 0x1 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x485 DUP1 PUSH2 0x25 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x771602F7 EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x8129FC1C EQ PUSH2 0x81 JUMPI DUP1 PUSH4 0x94033EBD EQ PUSH2 0x8B JUMPI DUP1 PUSH4 0xBC1B392D EQ PUSH2 0xA9 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x66 SWAP2 SWAP1 PUSH2 0x24E JUMP JUMPDEST PUSH2 0xB3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x78 SWAP2 SWAP1 PUSH2 0x30A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x89 PUSH2 0xD0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x93 PUSH2 0x206 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA0 SWAP2 SWAP1 PUSH2 0x30A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB1 PUSH2 0x20C JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xC1 SWAP2 SWAP1 PUSH2 0x336 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 DUP2 SWAP1 SSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP DUP1 DUP1 ISZERO PUSH2 0x101 JUMPI POP PUSH1 0x1 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND LT JUMPDEST DUP1 PUSH2 0x12E JUMPI POP PUSH2 0x110 ADDRESS PUSH2 0x216 JUMP JUMPDEST ISZERO DUP1 ISZERO PUSH2 0x12D JUMPI POP PUSH1 0x1 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND EQ JUMPDEST JUMPDEST PUSH2 0x16D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x164 SWAP1 PUSH2 0x2EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x1AA JUMPI PUSH1 0x1 PUSH1 0x0 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST DUP1 ISZERO PUSH2 0x203 JUMPI PUSH1 0x0 DUP1 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x1FA SWAP2 SWAP1 PUSH2 0x2CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x248 DUP2 PUSH2 0x438 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x265 JUMPI PUSH2 0x264 PUSH2 0x3E4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x273 DUP6 DUP3 DUP7 ADD PUSH2 0x239 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x284 DUP6 DUP3 DUP7 ADD PUSH2 0x239 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x297 DUP2 PUSH2 0x3A3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AA PUSH1 0x2E DUP4 PUSH2 0x325 JUMP JUMPDEST SWAP2 POP PUSH2 0x2B5 DUP3 PUSH2 0x3E9 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2C9 DUP2 PUSH2 0x38C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2E4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x28E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x303 DUP2 PUSH2 0x29D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x31F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2C0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x341 DUP3 PUSH2 0x38C JUMP JUMPDEST SWAP2 POP PUSH2 0x34C DUP4 PUSH2 0x38C JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x381 JUMPI PUSH2 0x380 PUSH2 0x3B5 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3AE DUP3 PUSH2 0x396 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x647920696E697469616C697A6564000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x441 DUP2 PUSH2 0x38C JUMP JUMPDEST DUP2 EQ PUSH2 0x44C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH15 0xA5971F7DDC77AA2DADB99D09DDCCD9 PUSH3 0x8728FA 0x49 0xE1 BYTE 0xD6 MULMOD CALLVALUE JUMP 0xFC 0xBA 0xDC SELFDESTRUCT PUSH9 0x64736F6C6343000807 STOP CALLER ",
							"sourceMap": "120:300:2:-:0;;;182:1;159:24;;120:300;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@add_532": {
									"entryPoint": 179,
									"id": 532,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@initialize_512": {
									"entryPoint": 208,
									"id": 512,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@isContract_186": {
									"entryPoint": 534,
									"id": 186,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@lastUsed_506": {
									"entryPoint": 518,
									"id": 506,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@zero_540": {
									"entryPoint": 524,
									"id": 540,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_uint256": {
									"entryPoint": 569,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 590,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_rational_1_by_1_to_t_uint8_fromStack": {
									"entryPoint": 654,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 669,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 704,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed": {
									"entryPoint": 719,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 746,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 778,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 805,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 822,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 908,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 918,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_rational_1_by_1_to_t_uint8": {
									"entryPoint": 931,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 949,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 996,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759": {
									"entryPoint": 1001,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1080,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:3831:3",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:3"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:3",
														"type": ""
													}
												],
												"src": "7:139:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "235:391:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "281:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "283:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "283:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "283:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "256:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "265:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "252:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "252:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "277:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "248:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "248:32:3"
															},
															"nodeType": "YulIf",
															"src": "245:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "374:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "389:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "403:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "393:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "418:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "453:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "464:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "449:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "449:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "473:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "428:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "428:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "418:6:3"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "501:118:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "516:16:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "530:2:3",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "520:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "546:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "581:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "592:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "577:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "577:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "601:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "556:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "556:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "546:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "197:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "208:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "220:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "228:6:3",
														"type": ""
													}
												],
												"src": "152:474:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "703:72:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "720:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "762:5:3"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_rational_1_by_1_to_t_uint8",
																			"nodeType": "YulIdentifier",
																			"src": "725:36:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "725:43:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "713:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "713:56:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "713:56:3"
														}
													]
												},
												"name": "abi_encode_t_rational_1_by_1_to_t_uint8_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "691:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "698:3:3",
														"type": ""
													}
												],
												"src": "632:143:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "927:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "937:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1003:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1008:2:3",
																		"type": "",
																		"value": "46"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "944:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "944:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "937:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1109:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																	"nodeType": "YulIdentifier",
																	"src": "1020:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1020:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1020:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1122:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1133:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1138:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1129:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1129:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1122:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "915:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "923:3:3",
														"type": ""
													}
												],
												"src": "781:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1218:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1235:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1258:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1240:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1240:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1228:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1228:37:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1228:37:3"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1206:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1213:3:3",
														"type": ""
													}
												],
												"src": "1153:118:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1381:130:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1391:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1403:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1414:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1399:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1399:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1391:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1477:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1490:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1501:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1486:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1486:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_rational_1_by_1_to_t_uint8_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1427:49:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1427:77:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1427:77:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1353:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1365:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1376:4:3",
														"type": ""
													}
												],
												"src": "1277:234:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1688:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1698:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1710:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1721:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1706:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1706:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1698:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1745:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1756:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1741:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1741:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "1764:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1770:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1760:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1760:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1734:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1734:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1734:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1790:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "1924:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1798:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1798:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1790:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1668:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1683:4:3",
														"type": ""
													}
												],
												"src": "1517:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2040:124:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2050:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2062:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2073:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2058:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2058:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2050:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2130:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2143:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2154:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2139:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2139:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2086:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2086:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2086:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2012:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2024:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2035:4:3",
														"type": ""
													}
												],
												"src": "1942:222:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2210:35:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2220:19:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2236:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2230:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2230:9:3"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "2220:6:3"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2203:6:3",
														"type": ""
													}
												],
												"src": "2170:75:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2347:73:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2364:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2369:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2357:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2357:19:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2357:19:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2385:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2404:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2409:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2400:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2400:14:3"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "2385:11:3"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2319:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2324:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "2335:11:3",
														"type": ""
													}
												],
												"src": "2251:169:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2470:261:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2480:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2503:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2485:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2485:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "2480:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2514:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2537:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2519:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2519:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "2514:1:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2677:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "2679:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2679:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2679:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2598:1:3"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2605:66:3",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2673:1:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2601:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2601:74:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2595:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2595:81:3"
															},
															"nodeType": "YulIf",
															"src": "2592:107:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2709:16:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2720:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2723:1:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2716:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2716:9:3"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "2709:3:3"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2457:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2460:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "2466:3:3",
														"type": ""
													}
												],
												"src": "2426:305:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2782:32:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2792:16:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2803:5:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2792:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2764:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2774:7:3",
														"type": ""
													}
												],
												"src": "2737:77:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2863:43:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2873:27:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2888:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2895:4:3",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2884:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2884:16:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2873:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2845:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2855:7:3",
														"type": ""
													}
												],
												"src": "2820:86:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2978:51:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2988:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3017:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint8",
																	"nodeType": "YulIdentifier",
																	"src": "3001:15:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3001:22:3"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "2988:9:3"
																}
															]
														}
													]
												},
												"name": "convert_t_rational_1_by_1_to_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2958:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "2968:9:3",
														"type": ""
													}
												],
												"src": "2912:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3063:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3080:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3083:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3073:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3073:88:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3073:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3177:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3180:4:3",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3170:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3170:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3170:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3201:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3204:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3194:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3194:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3194:15:3"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "3035:180:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3310:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3327:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3330:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3320:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3320:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3320:12:3"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "3221:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3433:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3450:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3453:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3443:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3443:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3443:12:3"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "3344:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3573:127:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3595:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3603:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3591:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3591:14:3"
																	},
																	{
																		"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320616c726561",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3607:34:3",
																		"type": "",
																		"value": "Initializable: contract is alrea"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3584:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3584:58:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3584:58:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3663:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3671:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3659:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3659:15:3"
																	},
																	{
																		"hexValue": "647920696e697469616c697a6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3676:16:3",
																		"type": "",
																		"value": "dy initialized"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3652:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3652:41:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3652:41:3"
														}
													]
												},
												"name": "store_literal_in_memory_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "3565:6:3",
														"type": ""
													}
												],
												"src": "3467:233:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3749:79:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3806:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3815:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3818:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3808:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3808:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3808:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3772:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3797:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "3779:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3779:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3769:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3769:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3762:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3762:43:3"
															},
															"nodeType": "YulIf",
															"src": "3759:63:3"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3742:5:3",
														"type": ""
													}
												],
												"src": "3706:122:3"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_rational_1_by_1_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_1_by_1_to_t_uint8(value))\n    }\n\n    function abi_encode_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 46)\n        store_literal_in_memory_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_rational_1_by_1_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function convert_t_rational_1_by_1_to_t_uint8(value) -> converted {\n        converted := cleanup_t_uint8(value)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function store_literal_in_memory_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759(memPtr) {\n\n        mstore(add(memPtr, 0), \"Initializable: contract is alrea\")\n\n        mstore(add(memPtr, 32), \"dy initialized\")\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061004c5760003560e01c8063771602f7146100515780638129fc1c1461008157806394033ebd1461008b578063bc1b392d146100a9575b600080fd5b61006b6004803603810190610066919061024e565b6100b3565b604051610078919061030a565b60405180910390f35b6100896100d0565b005b610093610206565b6040516100a0919061030a565b60405180910390f35b6100b161020c565b005b600081836100c19190610336565b90508060018190555092915050565b60008060019054906101000a900460ff161590508080156101015750600160008054906101000a900460ff1660ff16105b8061012e575061011030610216565b15801561012d5750600160008054906101000a900460ff1660ff16145b5b61016d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610164906102ea565b60405180910390fd5b60016000806101000a81548160ff021916908360ff16021790555080156101aa576001600060016101000a81548160ff0219169083151502179055505b80156102035760008060016101000a81548160ff0219169083151502179055507f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb384740249860016040516101fa91906102cf565b60405180910390a15b50565b60015481565b6000600181905550565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b60008135905061024881610438565b92915050565b60008060408385031215610265576102646103e4565b5b600061027385828601610239565b925050602061028485828601610239565b9150509250929050565b610297816103a3565b82525050565b60006102aa602e83610325565b91506102b5826103e9565b604082019050919050565b6102c98161038c565b82525050565b60006020820190506102e4600083018461028e565b92915050565b600060208201905081810360008301526103038161029d565b9050919050565b600060208201905061031f60008301846102c0565b92915050565b600082825260208201905092915050565b60006103418261038c565b915061034c8361038c565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610381576103806103b5565b5b828201905092915050565b6000819050919050565b600060ff82169050919050565b60006103ae82610396565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600080fd5b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b6104418161038c565b811461044c57600080fd5b5056fea26469706673582212206ea5971f7ddc77aa2dadb99d09ddccd9628728fa49e11ad6093456fcbadcff6864736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x771602F7 EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x8129FC1C EQ PUSH2 0x81 JUMPI DUP1 PUSH4 0x94033EBD EQ PUSH2 0x8B JUMPI DUP1 PUSH4 0xBC1B392D EQ PUSH2 0xA9 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x66 SWAP2 SWAP1 PUSH2 0x24E JUMP JUMPDEST PUSH2 0xB3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x78 SWAP2 SWAP1 PUSH2 0x30A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x89 PUSH2 0xD0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x93 PUSH2 0x206 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA0 SWAP2 SWAP1 PUSH2 0x30A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB1 PUSH2 0x20C JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xC1 SWAP2 SWAP1 PUSH2 0x336 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 DUP2 SWAP1 SSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP DUP1 DUP1 ISZERO PUSH2 0x101 JUMPI POP PUSH1 0x1 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND LT JUMPDEST DUP1 PUSH2 0x12E JUMPI POP PUSH2 0x110 ADDRESS PUSH2 0x216 JUMP JUMPDEST ISZERO DUP1 ISZERO PUSH2 0x12D JUMPI POP PUSH1 0x1 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND EQ JUMPDEST JUMPDEST PUSH2 0x16D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x164 SWAP1 PUSH2 0x2EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x1AA JUMPI PUSH1 0x1 PUSH1 0x0 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST DUP1 ISZERO PUSH2 0x203 JUMPI PUSH1 0x0 DUP1 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x1FA SWAP2 SWAP1 PUSH2 0x2CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x248 DUP2 PUSH2 0x438 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x265 JUMPI PUSH2 0x264 PUSH2 0x3E4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x273 DUP6 DUP3 DUP7 ADD PUSH2 0x239 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x284 DUP6 DUP3 DUP7 ADD PUSH2 0x239 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x297 DUP2 PUSH2 0x3A3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AA PUSH1 0x2E DUP4 PUSH2 0x325 JUMP JUMPDEST SWAP2 POP PUSH2 0x2B5 DUP3 PUSH2 0x3E9 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2C9 DUP2 PUSH2 0x38C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2E4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x28E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x303 DUP2 PUSH2 0x29D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x31F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2C0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x341 DUP3 PUSH2 0x38C JUMP JUMPDEST SWAP2 POP PUSH2 0x34C DUP4 PUSH2 0x38C JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x381 JUMPI PUSH2 0x380 PUSH2 0x3B5 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3AE DUP3 PUSH2 0x396 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x647920696E697469616C697A6564000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x441 DUP2 PUSH2 0x38C JUMP JUMPDEST DUP2 EQ PUSH2 0x44C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH15 0xA5971F7DDC77AA2DADB99D09DDCCD9 PUSH3 0x8728FA 0x49 0xE1 BYTE 0xD6 MULMOD CALLVALUE JUMP 0xFC 0xBA 0xDC SELFDESTRUCT PUSH9 0x64736F6C6343000807 STOP CALLER ",
							"sourceMap": "120:300:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;251:109;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;190:51;;;:::i;:::-;;159:24;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;366:52;;;:::i;:::-;;251:109;301:9;330:1;326;:5;;;;:::i;:::-;322:9;;352:1;341:8;:12;;;;251:109;;;;:::o;190:51::-;3257:19:0;3280:13;;;;;;;;;;;3279:14;3257:36;;3325:14;:34;;;;;3358:1;3343:12;;;;;;;;;;:16;;;3325:34;3324:97;;;;3366:33;3393:4;3366:18;:33::i;:::-;3365:34;:55;;;;;3419:1;3403:12;;;;;;;;;;:17;;;3365:55;3324:97;3303:190;;;;;;;;;;;;:::i;:::-;;;;;;;;;3518:1;3503:12;;:16;;;;;;;;;;;;;;;;;;3533:14;3529:65;;;3579:4;3563:13;;:20;;;;;;;;;;;;;;;;;;3529:65;3618:14;3614:99;;;3664:5;3648:13;;:21;;;;;;;;;;;;;;;;;;3688:14;3700:1;3688:14;;;;;;:::i;:::-;;;;;;;;3614:99;3247:472;190:51:2:o;159:24::-;;;;:::o;366:52::-;410:1;399:8;:12;;;;366:52::o;1175:320:1:-;1235:4;1487:1;1465:7;:19;;;:23;1458:30;;1175:320;;;:::o;7:139:3:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:474::-;220:6;228;277:2;265:9;256:7;252:23;248:32;245:119;;;283:79;;:::i;:::-;245:119;403:1;428:53;473:7;464:6;453:9;449:22;428:53;:::i;:::-;418:63;;374:117;530:2;556:53;601:7;592:6;581:9;577:22;556:53;:::i;:::-;546:63;;501:118;152:474;;;;;:::o;632:143::-;725:43;762:5;725:43;:::i;:::-;720:3;713:56;632:143;;:::o;781:366::-;923:3;944:67;1008:2;1003:3;944:67;:::i;:::-;937:74;;1020:93;1109:3;1020:93;:::i;:::-;1138:2;1133:3;1129:12;1122:19;;781:366;;;:::o;1153:118::-;1240:24;1258:5;1240:24;:::i;:::-;1235:3;1228:37;1153:118;;:::o;1277:234::-;1376:4;1414:2;1403:9;1399:18;1391:26;;1427:77;1501:1;1490:9;1486:17;1477:6;1427:77;:::i;:::-;1277:234;;;;:::o;1517:419::-;1683:4;1721:2;1710:9;1706:18;1698:26;;1770:9;1764:4;1760:20;1756:1;1745:9;1741:17;1734:47;1798:131;1924:4;1798:131;:::i;:::-;1790:139;;1517:419;;;:::o;1942:222::-;2035:4;2073:2;2062:9;2058:18;2050:26;;2086:71;2154:1;2143:9;2139:17;2130:6;2086:71;:::i;:::-;1942:222;;;;:::o;2251:169::-;2335:11;2369:6;2364:3;2357:19;2409:4;2404:3;2400:14;2385:29;;2251:169;;;;:::o;2426:305::-;2466:3;2485:20;2503:1;2485:20;:::i;:::-;2480:25;;2519:20;2537:1;2519:20;:::i;:::-;2514:25;;2673:1;2605:66;2601:74;2598:1;2595:81;2592:107;;;2679:18;;:::i;:::-;2592:107;2723:1;2720;2716:9;2709:16;;2426:305;;;;:::o;2737:77::-;2774:7;2803:5;2792:16;;2737:77;;;:::o;2820:86::-;2855:7;2895:4;2888:5;2884:16;2873:27;;2820:86;;;:::o;2912:117::-;2968:9;3001:22;3017:5;3001:22;:::i;:::-;2988:35;;2912:117;;;:::o;3035:180::-;3083:77;3080:1;3073:88;3180:4;3177:1;3170:15;3204:4;3201:1;3194:15;3344:117;3453:1;3450;3443:12;3467:233;3607:34;3603:1;3595:6;3591:14;3584:58;3676:16;3671:2;3663:6;3659:15;3652:41;3467:233;:::o;3706:122::-;3779:24;3797:5;3779:24;:::i;:::-;3772:5;3769:35;3759:63;;3818:1;3815;3808:12;3759:63;3706:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "231400",
								"executionCost": "5281",
								"totalCost": "236681"
							},
							"external": {
								"add(uint256,uint256)": "infinite",
								"initialize()": "83563",
								"lastUsed()": "2451",
								"zero()": "5202"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 120,
									"end": 420,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 120,
									"end": 420,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 120,
									"end": 420,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 182,
									"end": 183,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 159,
									"end": 183,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 159,
									"end": 183,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 120,
									"end": 420,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 120,
									"end": 420,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 120,
									"end": 420,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 120,
									"end": 420,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 120,
									"end": 420,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 120,
									"end": 420,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 420,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 120,
									"end": 420,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 120,
									"end": 420,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 120,
									"end": 420,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 120,
									"end": 420,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 120,
									"end": 420,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 120,
									"end": 420,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 120,
									"end": 420,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 120,
									"end": 420,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 420,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 120,
									"end": 420,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 420,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206ea5971f7ddc77aa2dadb99d09ddccd9628728fa49e11ad6093456fcbadcff6864736f6c63430008070033",
									".code": [
										{
											"begin": 120,
											"end": 420,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 120,
											"end": 420,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 120,
											"end": 420,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 120,
											"end": 420,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 120,
											"end": 420,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 120,
											"end": 420,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 120,
											"end": 420,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 120,
											"end": 420,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 120,
											"end": 420,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 120,
											"end": 420,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 120,
											"end": 420,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 120,
											"end": 420,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 120,
											"end": 420,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 120,
											"end": 420,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 120,
											"end": 420,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 120,
											"end": 420,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 120,
											"end": 420,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 120,
											"end": 420,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 120,
											"end": 420,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 120,
											"end": 420,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 120,
											"end": 420,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 120,
											"end": 420,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 120,
											"end": 420,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 120,
											"end": 420,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 120,
											"end": 420,
											"name": "PUSH",
											"source": 2,
											"value": "771602F7"
										},
										{
											"begin": 120,
											"end": 420,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 120,
											"end": 420,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 120,
											"end": 420,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 120,
											"end": 420,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 120,
											"end": 420,
											"name": "PUSH",
											"source": 2,
											"value": "8129FC1C"
										},
										{
											"begin": 120,
											"end": 420,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 120,
											"end": 420,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 120,
											"end": 420,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 120,
											"end": 420,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 120,
											"end": 420,
											"name": "PUSH",
											"source": 2,
											"value": "94033EBD"
										},
										{
											"begin": 120,
											"end": 420,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 120,
											"end": 420,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 120,
											"end": 420,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 120,
											"end": 420,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 120,
											"end": 420,
											"name": "PUSH",
											"source": 2,
											"value": "BC1B392D"
										},
										{
											"begin": 120,
											"end": 420,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 120,
											"end": 420,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 120,
											"end": 420,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 120,
											"end": 420,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 120,
											"end": 420,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 120,
											"end": 420,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 120,
											"end": 420,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 120,
											"end": 420,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 251,
											"end": 360,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 251,
											"end": 360,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 251,
											"end": 360,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 251,
											"end": 360,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 251,
											"end": 360,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 251,
											"end": 360,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 251,
											"end": 360,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 251,
											"end": 360,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 251,
											"end": 360,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 251,
											"end": 360,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 251,
											"end": 360,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 251,
											"end": 360,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 251,
											"end": 360,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 251,
											"end": 360,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 251,
											"end": 360,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 251,
											"end": 360,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 251,
											"end": 360,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 251,
											"end": 360,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 251,
											"end": 360,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 251,
											"end": 360,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 251,
											"end": 360,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 251,
											"end": 360,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 251,
											"end": 360,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 251,
											"end": 360,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 251,
											"end": 360,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 251,
											"end": 360,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 251,
											"end": 360,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 251,
											"end": 360,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 251,
											"end": 360,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 251,
											"end": 360,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 251,
											"end": 360,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 251,
											"end": 360,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 251,
											"end": 360,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 251,
											"end": 360,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 251,
											"end": 360,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 251,
											"end": 360,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 251,
											"end": 360,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 190,
											"end": 241,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 190,
											"end": 241,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 190,
											"end": 241,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 190,
											"end": 241,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 190,
											"end": 241,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 190,
											"end": 241,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 190,
											"end": 241,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 190,
											"end": 241,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 159,
											"end": 183,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 159,
											"end": 183,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 159,
											"end": 183,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 159,
											"end": 183,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 159,
											"end": 183,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 159,
											"end": 183,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 159,
											"end": 183,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 159,
											"end": 183,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 159,
											"end": 183,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 159,
											"end": 183,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 159,
											"end": 183,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 159,
											"end": 183,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 159,
											"end": 183,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 159,
											"end": 183,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 159,
											"end": 183,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 159,
											"end": 183,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 159,
											"end": 183,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 159,
											"end": 183,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 159,
											"end": 183,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 159,
											"end": 183,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 159,
											"end": 183,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 159,
											"end": 183,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 159,
											"end": 183,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 366,
											"end": 418,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 366,
											"end": 418,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 366,
											"end": 418,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 366,
											"end": 418,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 366,
											"end": 418,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 366,
											"end": 418,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 366,
											"end": 418,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 366,
											"end": 418,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 251,
											"end": 360,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 251,
											"end": 360,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 301,
											"end": 310,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 330,
											"end": 331,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 326,
											"end": 327,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 326,
											"end": 331,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 326,
											"end": 331,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 326,
											"end": 331,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 326,
											"end": 331,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 326,
											"end": 331,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 326,
											"end": 331,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 326,
											"end": 331,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 322,
											"end": 331,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 322,
											"end": 331,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 352,
											"end": 353,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 341,
											"end": 349,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 341,
											"end": 353,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 341,
											"end": 353,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 341,
											"end": 353,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 341,
											"end": 353,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 251,
											"end": 360,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 251,
											"end": 360,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 251,
											"end": 360,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 251,
											"end": 360,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 251,
											"end": 360,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 190,
											"end": 241,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 190,
											"end": 241,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3257,
											"end": 3276,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3280,
											"end": 3293,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3280,
											"end": 3293,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3280,
											"end": 3293,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3280,
											"end": 3293,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3280,
											"end": 3293,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3280,
											"end": 3293,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3280,
											"end": 3293,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3280,
											"end": 3293,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3280,
											"end": 3293,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3280,
											"end": 3293,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 3280,
											"end": 3293,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3279,
											"end": 3293,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3257,
											"end": 3293,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3257,
											"end": 3293,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3325,
											"end": 3339,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3325,
											"end": 3359,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3325,
											"end": 3359,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3325,
											"end": 3359,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 3325,
											"end": 3359,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3325,
											"end": 3359,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3358,
											"end": 3359,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3343,
											"end": 3355,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3343,
											"end": 3355,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3343,
											"end": 3355,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3343,
											"end": 3355,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3343,
											"end": 3355,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3343,
											"end": 3355,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3343,
											"end": 3355,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3343,
											"end": 3355,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3343,
											"end": 3355,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 3343,
											"end": 3355,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3343,
											"end": 3359,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 3343,
											"end": 3359,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3343,
											"end": 3359,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 3325,
											"end": 3359,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 3325,
											"end": 3359,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3324,
											"end": 3421,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3324,
											"end": 3421,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 3324,
											"end": 3421,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3324,
											"end": 3421,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3366,
											"end": 3399,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 3393,
											"end": 3397,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 3366,
											"end": 3384,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 3366,
											"end": 3399,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3366,
											"end": 3399,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 3366,
											"end": 3399,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3365,
											"end": 3399,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3365,
											"end": 3420,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3365,
											"end": 3420,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3365,
											"end": 3420,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 3365,
											"end": 3420,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3365,
											"end": 3420,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3419,
											"end": 3420,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3403,
											"end": 3415,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3403,
											"end": 3415,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3403,
											"end": 3415,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3403,
											"end": 3415,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3403,
											"end": 3415,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3403,
											"end": 3415,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3403,
											"end": 3415,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3403,
											"end": 3415,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3403,
											"end": 3415,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 3403,
											"end": 3415,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3403,
											"end": 3420,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 3403,
											"end": 3420,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3403,
											"end": 3420,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3365,
											"end": 3420,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 3365,
											"end": 3420,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3324,
											"end": 3421,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 3324,
											"end": 3421,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3303,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 3303,
											"end": 3493,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3303,
											"end": 3493,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3303,
											"end": 3493,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3303,
											"end": 3493,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3303,
											"end": 3493,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3303,
											"end": 3493,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3303,
											"end": 3493,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3303,
											"end": 3493,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3303,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 3303,
											"end": 3493,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3303,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 3303,
											"end": 3493,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3303,
											"end": 3493,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 3303,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3303,
											"end": 3493,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3303,
											"end": 3493,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3303,
											"end": 3493,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3303,
											"end": 3493,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3303,
											"end": 3493,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3303,
											"end": 3493,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3303,
											"end": 3493,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3303,
											"end": 3493,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 3303,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3518,
											"end": 3519,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3503,
											"end": 3515,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3503,
											"end": 3515,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3503,
											"end": 3519,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3503,
											"end": 3519,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3503,
											"end": 3519,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3503,
											"end": 3519,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3503,
											"end": 3519,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3503,
											"end": 3519,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 3503,
											"end": 3519,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3503,
											"end": 3519,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3503,
											"end": 3519,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3503,
											"end": 3519,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3503,
											"end": 3519,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3503,
											"end": 3519,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 3503,
											"end": 3519,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3503,
											"end": 3519,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3503,
											"end": 3519,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3503,
											"end": 3519,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3503,
											"end": 3519,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3503,
											"end": 3519,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3533,
											"end": 3547,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3529,
											"end": 3594,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3529,
											"end": 3594,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 3529,
											"end": 3594,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3579,
											"end": 3583,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3563,
											"end": 3576,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3563,
											"end": 3576,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3563,
											"end": 3583,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3563,
											"end": 3583,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3563,
											"end": 3583,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3563,
											"end": 3583,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3563,
											"end": 3583,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3563,
											"end": 3583,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 3563,
											"end": 3583,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3563,
											"end": 3583,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3563,
											"end": 3583,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3563,
											"end": 3583,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3563,
											"end": 3583,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3563,
											"end": 3583,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3563,
											"end": 3583,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3563,
											"end": 3583,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3563,
											"end": 3583,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3563,
											"end": 3583,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3563,
											"end": 3583,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3563,
											"end": 3583,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3529,
											"end": 3594,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 3529,
											"end": 3594,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3618,
											"end": 3632,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3614,
											"end": 3713,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3614,
											"end": 3713,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 3614,
											"end": 3713,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3664,
											"end": 3669,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3648,
											"end": 3661,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3648,
											"end": 3661,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3648,
											"end": 3669,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3648,
											"end": 3669,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3648,
											"end": 3669,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3648,
											"end": 3669,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3648,
											"end": 3669,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3648,
											"end": 3669,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 3648,
											"end": 3669,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3648,
											"end": 3669,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3648,
											"end": 3669,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3648,
											"end": 3669,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3648,
											"end": 3669,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3648,
											"end": 3669,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3648,
											"end": 3669,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3648,
											"end": 3669,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3648,
											"end": 3669,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3648,
											"end": 3669,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3648,
											"end": 3669,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3648,
											"end": 3669,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3688,
											"end": 3702,
											"name": "PUSH",
											"source": 0,
											"value": "7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498"
										},
										{
											"begin": 3700,
											"end": 3701,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3688,
											"end": 3702,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3688,
											"end": 3702,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3688,
											"end": 3702,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 3688,
											"end": 3702,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3688,
											"end": 3702,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3688,
											"end": 3702,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 3688,
											"end": 3702,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3688,
											"end": 3702,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 3688,
											"end": 3702,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3688,
											"end": 3702,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3688,
											"end": 3702,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3688,
											"end": 3702,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3688,
											"end": 3702,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3688,
											"end": 3702,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3688,
											"end": 3702,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3688,
											"end": 3702,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 3614,
											"end": 3713,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 3614,
											"end": 3713,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3247,
											"end": 3719,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 190,
											"end": 241,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 159,
											"end": 183,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 159,
											"end": 183,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 159,
											"end": 183,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 159,
											"end": 183,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 159,
											"end": 183,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 159,
											"end": 183,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 366,
											"end": 418,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 366,
											"end": 418,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 410,
											"end": 411,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 399,
											"end": 407,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 399,
											"end": 411,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 399,
											"end": 411,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 399,
											"end": 411,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 399,
											"end": 411,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 366,
											"end": 418,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1235,
											"end": 1239,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1487,
											"end": 1488,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1465,
											"end": 1472,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 1465,
											"end": 1488,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1458,
											"end": 1488,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1458,
											"end": 1488,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 53,
											"end": 58,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 626,
											"name": "tag",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 152,
											"end": 626,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 220,
											"end": 226,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 228,
											"end": 234,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 277,
											"end": 279,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 265,
											"end": 274,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 256,
											"end": 263,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 252,
											"end": 275,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 248,
											"end": 280,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 245,
											"end": 364,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 245,
											"end": 364,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 245,
											"end": 364,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 283,
											"end": 362,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 283,
											"end": 362,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 283,
											"end": 362,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 283,
											"end": 362,
											"name": "tag",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 283,
											"end": 362,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 245,
											"end": 364,
											"name": "tag",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 245,
											"end": 364,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 403,
											"end": 404,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 428,
											"end": 481,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 473,
											"end": 480,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 464,
											"end": 470,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 453,
											"end": 462,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 449,
											"end": 471,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 428,
											"end": 481,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 428,
											"end": 481,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 428,
											"end": 481,
											"name": "tag",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 428,
											"end": 481,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 418,
											"end": 481,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 418,
											"end": 481,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 374,
											"end": 491,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 530,
											"end": 532,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 556,
											"end": 609,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 601,
											"end": 608,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 592,
											"end": 598,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 581,
											"end": 590,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 577,
											"end": 599,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 556,
											"end": 609,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 556,
											"end": 609,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 556,
											"end": 609,
											"name": "tag",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 556,
											"end": 609,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 546,
											"end": 609,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 546,
											"end": 609,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 501,
											"end": 619,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 152,
											"end": 626,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 152,
											"end": 626,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 152,
											"end": 626,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 152,
											"end": 626,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 152,
											"end": 626,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 152,
											"end": 626,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 632,
											"end": 775,
											"name": "tag",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 632,
											"end": 775,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 725,
											"end": 768,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 762,
											"end": 767,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 725,
											"end": 768,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 725,
											"end": 768,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 725,
											"end": 768,
											"name": "tag",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 725,
											"end": 768,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 720,
											"end": 723,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 713,
											"end": 769,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 632,
											"end": 775,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 632,
											"end": 775,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 632,
											"end": 775,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 781,
											"end": 1147,
											"name": "tag",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 781,
											"end": 1147,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 923,
											"end": 926,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 944,
											"end": 1011,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 1008,
											"end": 1010,
											"name": "PUSH",
											"source": 3,
											"value": "2E"
										},
										{
											"begin": 1003,
											"end": 1006,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 944,
											"end": 1011,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 944,
											"end": 1011,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 944,
											"end": 1011,
											"name": "tag",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 944,
											"end": 1011,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 937,
											"end": 1011,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 937,
											"end": 1011,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1020,
											"end": 1113,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 1109,
											"end": 1112,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1020,
											"end": 1113,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 1020,
											"end": 1113,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1020,
											"end": 1113,
											"name": "tag",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 1020,
											"end": 1113,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1138,
											"end": 1140,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1133,
											"end": 1136,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1129,
											"end": 1141,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1122,
											"end": 1141,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1122,
											"end": 1141,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 781,
											"end": 1147,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 781,
											"end": 1147,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 781,
											"end": 1147,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 781,
											"end": 1147,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1153,
											"end": 1271,
											"name": "tag",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1153,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1240,
											"end": 1264,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 1258,
											"end": 1263,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1240,
											"end": 1264,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 1240,
											"end": 1264,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1264,
											"name": "tag",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 1240,
											"end": 1264,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1235,
											"end": 1238,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1228,
											"end": 1265,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1153,
											"end": 1271,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1153,
											"end": 1271,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1153,
											"end": 1271,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1277,
											"end": 1511,
											"name": "tag",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 1277,
											"end": 1511,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1376,
											"end": 1380,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1414,
											"end": 1416,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1403,
											"end": 1412,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1399,
											"end": 1417,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1391,
											"end": 1417,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1391,
											"end": 1417,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1427,
											"end": 1504,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 1501,
											"end": 1502,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1490,
											"end": 1499,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1486,
											"end": 1503,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1477,
											"end": 1483,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1427,
											"end": 1504,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 1427,
											"end": 1504,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1427,
											"end": 1504,
											"name": "tag",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 1427,
											"end": 1504,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1277,
											"end": 1511,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1277,
											"end": 1511,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1277,
											"end": 1511,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1277,
											"end": 1511,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1277,
											"end": 1511,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1517,
											"end": 1936,
											"name": "tag",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 1517,
											"end": 1936,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1683,
											"end": 1687,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1721,
											"end": 1723,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1710,
											"end": 1719,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1706,
											"end": 1724,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1724,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1724,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1770,
											"end": 1779,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1764,
											"end": 1768,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1780,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1756,
											"end": 1757,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1745,
											"end": 1754,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1741,
											"end": 1758,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1734,
											"end": 1781,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1798,
											"end": 1929,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 1924,
											"end": 1928,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1798,
											"end": 1929,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 1798,
											"end": 1929,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1798,
											"end": 1929,
											"name": "tag",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 1798,
											"end": 1929,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1790,
											"end": 1929,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1790,
											"end": 1929,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1517,
											"end": 1936,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1517,
											"end": 1936,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1517,
											"end": 1936,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1517,
											"end": 1936,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1942,
											"end": 2164,
											"name": "tag",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 1942,
											"end": 2164,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2035,
											"end": 2039,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2073,
											"end": 2075,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2062,
											"end": 2071,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2058,
											"end": 2076,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2050,
											"end": 2076,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2050,
											"end": 2076,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2086,
											"end": 2157,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 2154,
											"end": 2155,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2143,
											"end": 2152,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2139,
											"end": 2156,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2130,
											"end": 2136,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2086,
											"end": 2157,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2086,
											"end": 2157,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2086,
											"end": 2157,
											"name": "tag",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 2086,
											"end": 2157,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1942,
											"end": 2164,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1942,
											"end": 2164,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1942,
											"end": 2164,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1942,
											"end": 2164,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1942,
											"end": 2164,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2251,
											"end": 2420,
											"name": "tag",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 2251,
											"end": 2420,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2335,
											"end": 2346,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2369,
											"end": 2375,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2364,
											"end": 2367,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2357,
											"end": 2376,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2409,
											"end": 2413,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2404,
											"end": 2407,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2400,
											"end": 2414,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2385,
											"end": 2414,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2385,
											"end": 2414,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2251,
											"end": 2420,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2251,
											"end": 2420,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2251,
											"end": 2420,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2251,
											"end": 2420,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2251,
											"end": 2420,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2426,
											"end": 2731,
											"name": "tag",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 2426,
											"end": 2731,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2466,
											"end": 2469,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2485,
											"end": 2505,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 2503,
											"end": 2504,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2485,
											"end": 2505,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 2485,
											"end": 2505,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2485,
											"end": 2505,
											"name": "tag",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 2485,
											"end": 2505,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2480,
											"end": 2505,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2480,
											"end": 2505,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2519,
											"end": 2539,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 2537,
											"end": 2538,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2519,
											"end": 2539,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 2519,
											"end": 2539,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2519,
											"end": 2539,
											"name": "tag",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 2519,
											"end": 2539,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2514,
											"end": 2539,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2514,
											"end": 2539,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2673,
											"end": 2674,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2605,
											"end": 2671,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2601,
											"end": 2675,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2598,
											"end": 2599,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2676,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2592,
											"end": 2699,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2592,
											"end": 2699,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 2592,
											"end": 2699,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2679,
											"end": 2697,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 2679,
											"end": 2697,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 2679,
											"end": 2697,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2679,
											"end": 2697,
											"name": "tag",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 2679,
											"end": 2697,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2592,
											"end": 2699,
											"name": "tag",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 2592,
											"end": 2699,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2723,
											"end": 2724,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2720,
											"end": 2721,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2716,
											"end": 2725,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2709,
											"end": 2725,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2709,
											"end": 2725,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2426,
											"end": 2731,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2426,
											"end": 2731,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2426,
											"end": 2731,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2426,
											"end": 2731,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2426,
											"end": 2731,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2737,
											"end": 2814,
											"name": "tag",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 2737,
											"end": 2814,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2774,
											"end": 2781,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2803,
											"end": 2808,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2792,
											"end": 2808,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2792,
											"end": 2808,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2737,
											"end": 2814,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2737,
											"end": 2814,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2737,
											"end": 2814,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2737,
											"end": 2814,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2820,
											"end": 2906,
											"name": "tag",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 2820,
											"end": 2906,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2855,
											"end": 2862,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2895,
											"end": 2899,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 2888,
											"end": 2893,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2884,
											"end": 2900,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2873,
											"end": 2900,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2873,
											"end": 2900,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2906,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2906,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2906,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2906,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2912,
											"end": 3029,
											"name": "tag",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 2912,
											"end": 3029,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2968,
											"end": 2977,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3001,
											"end": 3023,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 3017,
											"end": 3022,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3001,
											"end": 3023,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 3001,
											"end": 3023,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3001,
											"end": 3023,
											"name": "tag",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 3001,
											"end": 3023,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2988,
											"end": 3023,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2988,
											"end": 3023,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2912,
											"end": 3029,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2912,
											"end": 3029,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2912,
											"end": 3029,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2912,
											"end": 3029,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3035,
											"end": 3215,
											"name": "tag",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 3035,
											"end": 3215,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3083,
											"end": 3160,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3080,
											"end": 3081,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3073,
											"end": 3161,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3180,
											"end": 3184,
											"name": "PUSH",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 3177,
											"end": 3178,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3170,
											"end": 3185,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3204,
											"end": 3208,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 3201,
											"end": 3202,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3194,
											"end": 3209,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3344,
											"end": 3461,
											"name": "tag",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 3344,
											"end": 3461,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3453,
											"end": 3454,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3450,
											"end": 3451,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3443,
											"end": 3455,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3467,
											"end": 3700,
											"name": "tag",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 3467,
											"end": 3700,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3607,
											"end": 3641,
											"name": "PUSH",
											"source": 3,
											"value": "496E697469616C697A61626C653A20636F6E747261637420697320616C726561"
										},
										{
											"begin": 3603,
											"end": 3604,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3595,
											"end": 3601,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3591,
											"end": 3605,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3584,
											"end": 3642,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3676,
											"end": 3692,
											"name": "PUSH",
											"source": 3,
											"value": "647920696E697469616C697A6564000000000000000000000000000000000000"
										},
										{
											"begin": 3671,
											"end": 3673,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3663,
											"end": 3669,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3659,
											"end": 3674,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3652,
											"end": 3693,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3467,
											"end": 3700,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3467,
											"end": 3700,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3706,
											"end": 3828,
											"name": "tag",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 3706,
											"end": 3828,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3779,
											"end": 3803,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 3797,
											"end": 3802,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3779,
											"end": 3803,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 3779,
											"end": 3803,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3779,
											"end": 3803,
											"name": "tag",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 3779,
											"end": 3803,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3772,
											"end": 3777,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3769,
											"end": 3804,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 3759,
											"end": 3822,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 3759,
											"end": 3822,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3818,
											"end": 3819,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3815,
											"end": 3816,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3808,
											"end": 3820,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3759,
											"end": 3822,
											"name": "tag",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 3759,
											"end": 3822,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3706,
											"end": 3828,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3706,
											"end": 3828,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"add(uint256,uint256)": "771602f7",
							"initialize()": "8129fc1c",
							"lastUsed()": "94033ebd",
							"zero()": "bc1b392d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"a\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"b\",\"type\":\"uint256\"}],\"name\":\"add\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"c\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastUsed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"zero\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/WalletV2.sol\":\"Wallet\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xcee5467d5d873fb75dae6f98c01a8d25dd609f9d0374c7d39217bd5f9539a2d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://546651335214a63d1ea3b1d3297228a1df2165f17063b2e45b589ade861ddedc\",\"dweb:/ipfs/QmNwpHiPBRB6dmNz9WLVYvy2kUhYHZgWBMWRcoDuMsuZt9\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"contracts/WalletV2.sol\":{\"keccak256\":\"0x8e26808b6df9e8815ba3ec178e16ba48049a64093e332f7a50723bd78f167a2c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d9812e3b24afea199719c6617a13dd726a9176225f7a028730d4a5c32d2519e9\",\"dweb:/ipfs/QmXaUAAb2WP2HfZ8SX9vdsNFiyfwj8jeHJBoanfkqzgU4Z\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 6,
								"contract": "contracts/WalletV2.sol:Wallet",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 9,
								"contract": "contracts/WalletV2.sol:Wallet",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 506,
								"contract": "contracts/WalletV2.sol:Wallet",
								"label": "lastUsed",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/proxy/utils/Initializable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/proxy/utils/Initializable.sol",
					"exportedSymbols": {
						"Address": [
							498
						],
						"Initializable": [
							168
						]
					},
					"id": 169,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "113:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../utils/Address.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 169,
							"sourceUnit": 499,
							"src": "138:33:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "173:2198:0",
								"text": " @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="
							},
							"fullyImplemented": true,
							"id": 168,
							"linearizedBaseContracts": [
								168
							],
							"name": "Initializable",
							"nameLocation": "2390:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"documentation": {
										"id": 4,
										"nodeType": "StructuredDocumentation",
										"src": "2410:109:0",
										"text": " @dev Indicates that the contract has been initialized.\n @custom:oz-retyped-from bool"
									},
									"id": 6,
									"mutability": "mutable",
									"name": "_initialized",
									"nameLocation": "2538:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 168,
									"src": "2524:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 5,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "2524:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"documentation": {
										"id": 7,
										"nodeType": "StructuredDocumentation",
										"src": "2557:91:0",
										"text": " @dev Indicates that the contract is in the process of being initialized."
									},
									"id": 9,
									"mutability": "mutable",
									"name": "_initializing",
									"nameLocation": "2666:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 168,
									"src": "2653:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 8,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "2653:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 10,
										"nodeType": "StructuredDocumentation",
										"src": "2686:90:0",
										"text": " @dev Triggered when the contract has been initialized or reinitialized."
									},
									"id": 14,
									"name": "Initialized",
									"nameLocation": "2787:11:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 12,
												"indexed": false,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "2805:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 14,
												"src": "2799:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 11,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2799:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2798:15:0"
									},
									"src": "2781:33:0"
								},
								{
									"body": {
										"id": 69,
										"nodeType": "Block",
										"src": "3247:472:0",
										"statements": [
											{
												"assignments": [
													18
												],
												"declarations": [
													{
														"constant": false,
														"id": 18,
														"mutability": "mutable",
														"name": "isTopLevelCall",
														"nameLocation": "3262:14:0",
														"nodeType": "VariableDeclaration",
														"scope": 69,
														"src": "3257:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 17,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3257:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 21,
												"initialValue": {
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3279:14:0",
													"subExpression": {
														"id": 19,
														"name": "_initializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 9,
														"src": "3280:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3257:36:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 42,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 27,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 23,
																			"name": "isTopLevelCall",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 18,
																			"src": "3325:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			},
																			"id": 26,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 24,
																				"name": "_initialized",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 6,
																				"src": "3343:12:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 25,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3358:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "3343:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "3325:34:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 28,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3324:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 36,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "!",
																			"prefix": true,
																			"src": "3365:34:0",
																			"subExpression": {
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"id": 33,
																								"name": "this",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967268,
																								"src": "3393:4:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_contract$_Initializable_$168",
																									"typeString": "contract Initializable"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_contract$_Initializable_$168",
																									"typeString": "contract Initializable"
																								}
																							],
																							"id": 32,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "3385:7:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_address_$",
																								"typeString": "type(address)"
																							},
																							"typeName": {
																								"id": 31,
																								"name": "address",
																								"nodeType": "ElementaryTypeName",
																								"src": "3385:7:0",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 34,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "3385:13:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"expression": {
																						"id": 29,
																						"name": "Address",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 498,
																						"src": "3366:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_Address_$498_$",
																							"typeString": "type(library Address)"
																						}
																					},
																					"id": 30,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "isContract",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 186,
																					"src": "3366:18:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																						"typeString": "function (address) view returns (bool)"
																					}
																				},
																				"id": 35,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3366:33:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			},
																			"id": 39,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 37,
																				"name": "_initialized",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 6,
																				"src": "3403:12:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 38,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3419:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "3403:17:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "3365:55:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 41,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3364:57:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3324:97:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564",
															"id": 43,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3435:48:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															},
															"value": "Initializable: contract is already initialized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															}
														],
														"id": 22,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3303:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 44,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3303:190:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 45,
												"nodeType": "ExpressionStatement",
												"src": "3303:190:0"
											},
											{
												"expression": {
													"id": 48,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 46,
														"name": "_initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 6,
														"src": "3503:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 47,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3518:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "3503:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 49,
												"nodeType": "ExpressionStatement",
												"src": "3503:16:0"
											},
											{
												"condition": {
													"id": 50,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 18,
													"src": "3533:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 56,
												"nodeType": "IfStatement",
												"src": "3529:65:0",
												"trueBody": {
													"id": 55,
													"nodeType": "Block",
													"src": "3549:45:0",
													"statements": [
														{
															"expression": {
																"id": 53,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 51,
																	"name": "_initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 9,
																	"src": "3563:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 52,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3579:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "3563:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 54,
															"nodeType": "ExpressionStatement",
															"src": "3563:20:0"
														}
													]
												}
											},
											{
												"id": 57,
												"nodeType": "PlaceholderStatement",
												"src": "3603:1:0"
											},
											{
												"condition": {
													"id": 58,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 18,
													"src": "3618:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 68,
												"nodeType": "IfStatement",
												"src": "3614:99:0",
												"trueBody": {
													"id": 67,
													"nodeType": "Block",
													"src": "3634:79:0",
													"statements": [
														{
															"expression": {
																"id": 61,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 59,
																	"name": "_initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 9,
																	"src": "3648:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 60,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3664:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "3648:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 62,
															"nodeType": "ExpressionStatement",
															"src": "3648:21:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"hexValue": "31",
																		"id": 64,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3700:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		}
																	],
																	"id": 63,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 14,
																	"src": "3688:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint8_$returns$__$",
																		"typeString": "function (uint8)"
																	}
																},
																"id": 65,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3688:14:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 66,
															"nodeType": "EmitStatement",
															"src": "3683:19:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 15,
										"nodeType": "StructuredDocumentation",
										"src": "2820:399:0",
										"text": " @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\n constructor.\n Emits an {Initialized} event."
									},
									"id": 70,
									"name": "initializer",
									"nameLocation": "3233:11:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3244:2:0"
									},
									"src": "3224:495:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 102,
										"nodeType": "Block",
										"src": "4830:255:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 81,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 77,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "4848:14:0",
																"subExpression": {
																	"id": 76,
																	"name": "_initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 9,
																	"src": "4849:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																"id": 80,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 78,
																	"name": "_initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 6,
																	"src": "4866:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 79,
																	"name": "version",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 73,
																	"src": "4881:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "4866:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4848:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564",
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4890:48:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															},
															"value": "Initializable: contract is already initialized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															}
														],
														"id": 75,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4840:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 83,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4840:99:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 84,
												"nodeType": "ExpressionStatement",
												"src": "4840:99:0"
											},
											{
												"expression": {
													"id": 87,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 85,
														"name": "_initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 6,
														"src": "4949:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 86,
														"name": "version",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 73,
														"src": "4964:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "4949:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 88,
												"nodeType": "ExpressionStatement",
												"src": "4949:22:0"
											},
											{
												"expression": {
													"id": 91,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 89,
														"name": "_initializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 9,
														"src": "4981:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 90,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4997:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "4981:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 92,
												"nodeType": "ExpressionStatement",
												"src": "4981:20:0"
											},
											{
												"id": 93,
												"nodeType": "PlaceholderStatement",
												"src": "5011:1:0"
											},
											{
												"expression": {
													"id": 96,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 94,
														"name": "_initializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 9,
														"src": "5022:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 95,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5038:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "5022:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 97,
												"nodeType": "ExpressionStatement",
												"src": "5022:21:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 99,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 73,
															"src": "5070:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 98,
														"name": "Initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 14,
														"src": "5058:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint8_$returns$__$",
															"typeString": "function (uint8)"
														}
													},
													"id": 100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5058:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 101,
												"nodeType": "EmitStatement",
												"src": "5053:25:0"
											}
										]
									},
									"documentation": {
										"id": 71,
										"nodeType": "StructuredDocumentation",
										"src": "3725:1062:0",
										"text": " @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: setting the version to 255 will prevent any future reinitialization.\n Emits an {Initialized} event."
									},
									"id": 103,
									"name": "reinitializer",
									"nameLocation": "4801:13:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 74,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 73,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "4821:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 103,
												"src": "4815:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 72,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "4815:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4814:15:0"
									},
									"src": "4792:293:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 112,
										"nodeType": "Block",
										"src": "5323:97:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 107,
															"name": "_initializing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 9,
															"src": "5341:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a61626c653a20636f6e7472616374206973206e6f7420696e697469616c697a696e67",
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5356:45:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b",
																"typeString": "literal_string \"Initializable: contract is not initializing\""
															},
															"value": "Initializable: contract is not initializing"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b",
																"typeString": "literal_string \"Initializable: contract is not initializing\""
															}
														],
														"id": 106,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5333:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 109,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5333:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 110,
												"nodeType": "ExpressionStatement",
												"src": "5333:69:0"
											},
											{
												"id": 111,
												"nodeType": "PlaceholderStatement",
												"src": "5412:1:0"
											}
										]
									},
									"documentation": {
										"id": 104,
										"nodeType": "StructuredDocumentation",
										"src": "5091:199:0",
										"text": " @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."
									},
									"id": 113,
									"name": "onlyInitializing",
									"nameLocation": "5304:16:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5320:2:0"
									},
									"src": "5295:125:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 148,
										"nodeType": "Block",
										"src": "5955:230:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 119,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "5973:14:0",
															"subExpression": {
																"id": 118,
																"name": "_initializing",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 9,
																"src": "5974:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320696e697469616c697a696e67",
															"id": 120,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5989:41:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a",
																"typeString": "literal_string \"Initializable: contract is initializing\""
															},
															"value": "Initializable: contract is initializing"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a",
																"typeString": "literal_string \"Initializable: contract is initializing\""
															}
														],
														"id": 117,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5965:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5965:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 122,
												"nodeType": "ExpressionStatement",
												"src": "5965:66:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 129,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 123,
														"name": "_initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 6,
														"src": "6045:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 126,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6065:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint8_$",
																		"typeString": "type(uint8)"
																	},
																	"typeName": {
																		"id": 125,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "6065:5:0",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint8_$",
																		"typeString": "type(uint8)"
																	}
																],
																"id": 124,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "6060:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 127,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6060:11:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint8",
																"typeString": "type(uint8)"
															}
														},
														"id": 128,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "6060:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "6045:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 147,
												"nodeType": "IfStatement",
												"src": "6041:138:0",
												"trueBody": {
													"id": 146,
													"nodeType": "Block",
													"src": "6077:102:0",
													"statements": [
														{
															"expression": {
																"id": 136,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 130,
																	"name": "_initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 6,
																	"src": "6091:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 133,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6111:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				},
																				"typeName": {
																					"id": 132,
																					"name": "uint8",
																					"nodeType": "ElementaryTypeName",
																					"src": "6111:5:0",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				}
																			],
																			"id": 131,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "6106:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 134,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6106:11:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_uint8",
																			"typeString": "type(uint8)"
																		}
																	},
																	"id": 135,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "max",
																	"nodeType": "MemberAccess",
																	"src": "6106:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "6091:30:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 137,
															"nodeType": "ExpressionStatement",
															"src": "6091:30:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 141,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "6157:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint8_$",
																						"typeString": "type(uint8)"
																					},
																					"typeName": {
																						"id": 140,
																						"name": "uint8",
																						"nodeType": "ElementaryTypeName",
																						"src": "6157:5:0",
																						"typeDescriptions": {}
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_type$_t_uint8_$",
																						"typeString": "type(uint8)"
																					}
																				],
																				"id": 139,
																				"name": "type",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967269,
																				"src": "6152:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 142,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6152:11:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_meta_type_t_uint8",
																				"typeString": "type(uint8)"
																			}
																		},
																		"id": 143,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "max",
																		"nodeType": "MemberAccess",
																		"src": "6152:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	],
																	"id": 138,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 14,
																	"src": "6140:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint8_$returns$__$",
																		"typeString": "function (uint8)"
																	}
																},
																"id": 144,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6140:28:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 145,
															"nodeType": "EmitStatement",
															"src": "6135:33:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 114,
										"nodeType": "StructuredDocumentation",
										"src": "5426:475:0",
										"text": " @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."
									},
									"id": 149,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_disableInitializers",
									"nameLocation": "5915:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5935:2:0"
									},
									"returnParameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5955:0:0"
									},
									"scope": 168,
									"src": "5906:279:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 157,
										"nodeType": "Block",
										"src": "6362:36:0",
										"statements": [
											{
												"expression": {
													"id": 155,
													"name": "_initialized",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 6,
													"src": "6379:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 154,
												"id": 156,
												"nodeType": "Return",
												"src": "6372:19:0"
											}
										]
									},
									"documentation": {
										"id": 150,
										"nodeType": "StructuredDocumentation",
										"src": "6191:102:0",
										"text": " @dev Internal function that returns the initialized version. Returns `_initialized`"
									},
									"id": 158,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializedVersion",
									"nameLocation": "6307:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6329:2:0"
									},
									"returnParameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "6355:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 152,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "6355:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6354:7:0"
									},
									"scope": 168,
									"src": "6298:100:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 166,
										"nodeType": "Block",
										"src": "6568:37:0",
										"statements": [
											{
												"expression": {
													"id": 164,
													"name": "_initializing",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 9,
													"src": "6585:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 163,
												"id": 165,
												"nodeType": "Return",
												"src": "6578:20:0"
											}
										]
									},
									"documentation": {
										"id": 159,
										"nodeType": "StructuredDocumentation",
										"src": "6404:103:0",
										"text": " @dev Internal function that returns the initialized version. Returns `_initializing`"
									},
									"id": 167,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isInitializing",
									"nameLocation": "6521:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6536:2:0"
									},
									"returnParameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "6562:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 161,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6562:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6561:6:0"
									},
									"scope": 168,
									"src": "6512:93:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 169,
							"src": "2372:4235:0",
							"usedErrors": []
						}
					],
					"src": "113:6495:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							498
						]
					},
					"id": 499,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 170,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 171,
								"nodeType": "StructuredDocumentation",
								"src": "126:67:1",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 498,
							"linearizedBaseContracts": [
								498
							],
							"name": "Address",
							"nameLocation": "202:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 185,
										"nodeType": "Block",
										"src": "1241:254:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 183,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 179,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 174,
																"src": "1465:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 180,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1465:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 181,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1465:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 182,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1487:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1465:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 178,
												"id": 184,
												"nodeType": "Return",
												"src": "1458:30:1"
											}
										]
									},
									"documentation": {
										"id": 172,
										"nodeType": "StructuredDocumentation",
										"src": "216:954:1",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 186,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1184:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1203:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 186,
												"src": "1195:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 173,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1195:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1194:17:1"
									},
									"returnParameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 186,
												"src": "1235:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 176,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1235:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1234:6:1"
									},
									"scope": 498,
									"src": "1175:320:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 219,
										"nodeType": "Block",
										"src": "2483:241:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 201,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 197,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2509:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$498",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$498",
																				"typeString": "library Address"
																			}
																		],
																		"id": 196,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2501:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 195,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2501:7:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 198,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2501:13:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 199,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2501:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 200,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 191,
																"src": "2526:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2501:31:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 202,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2534:31:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 194,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2493:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 203,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2493:73:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 204,
												"nodeType": "ExpressionStatement",
												"src": "2493:73:1"
											},
											{
												"assignments": [
													206,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 206,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2583:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 219,
														"src": "2578:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 205,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2578:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 213,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 211,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2626:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 207,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 189,
																"src": "2596:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 208,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2596:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 210,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 209,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 191,
																"src": "2618:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2596:29:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 212,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2596:33:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2577:52:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 215,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 206,
															"src": "2647:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 216,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2656:60:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 214,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2639:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2639:78:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 218,
												"nodeType": "ExpressionStatement",
												"src": "2639:78:1"
											}
										]
									},
									"documentation": {
										"id": 187,
										"nodeType": "StructuredDocumentation",
										"src": "1501:906:1",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 220,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2421:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 189,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2447:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "2431:25:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 188,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2431:15:1",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 191,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2466:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "2458:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 190,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2458:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:43:1"
									},
									"returnParameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2483:0:1"
									},
									"scope": 498,
									"src": "2412:312:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 237,
										"nodeType": "Block",
										"src": "3555:96:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 231,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 223,
															"src": "3594:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 232,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 225,
															"src": "3602:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 233,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3608:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 234,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3611:32:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 230,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															278,
															322
														],
														"referencedDeclaration": 322,
														"src": "3572:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 235,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3572:72:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 229,
												"id": 236,
												"nodeType": "Return",
												"src": "3565:79:1"
											}
										]
									},
									"documentation": {
										"id": 221,
										"nodeType": "StructuredDocumentation",
										"src": "2730:731:1",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 238,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3475:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3496:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "3488:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 222,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3488:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3517:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "3504:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 224,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3504:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3487:35:1"
									},
									"returnParameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 228,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "3541:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 227,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3541:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3540:14:1"
									},
									"scope": 498,
									"src": "3466:185:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 257,
										"nodeType": "Block",
										"src": "4020:76:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 251,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 241,
															"src": "4059:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 252,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 243,
															"src": "4067:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 253,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4073:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 254,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 245,
															"src": "4076:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 250,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															278,
															322
														],
														"referencedDeclaration": 322,
														"src": "4037:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4037:52:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 249,
												"id": 256,
												"nodeType": "Return",
												"src": "4030:59:1"
											}
										]
									},
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "3657:211:1",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 258,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3882:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3912:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "3904:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3904:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3941:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "3928:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 242,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3928:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3969:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "3955:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 244,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3955:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3894:93:1"
									},
									"returnParameters": {
										"id": 249,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 248,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "4006:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 247,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4006:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4005:14:1"
									},
									"scope": 498,
									"src": "3873:223:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 277,
										"nodeType": "Block",
										"src": "4601:111:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 271,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 261,
															"src": "4640:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 272,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 263,
															"src": "4648:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 273,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 265,
															"src": "4654:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 274,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4661:43:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 270,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															278,
															322
														],
														"referencedDeclaration": 322,
														"src": "4618:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 275,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4618:87:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 269,
												"id": 276,
												"nodeType": "Return",
												"src": "4611:94:1"
											}
										]
									},
									"documentation": {
										"id": 259,
										"nodeType": "StructuredDocumentation",
										"src": "4102:351:1",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 278,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4467:21:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4506:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "4498:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 260,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4498:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4535:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "4522:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 262,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4522:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4557:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "4549:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4549:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4488:80:1"
									},
									"returnParameters": {
										"id": 269,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 268,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "4587:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 267,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4587:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4586:14:1"
									},
									"scope": 498,
									"src": "4458:254:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 321,
										"nodeType": "Block",
										"src": "5139:267:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 299,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 295,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5165:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$498",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$498",
																				"typeString": "library Address"
																			}
																		],
																		"id": 294,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5157:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 293,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5157:7:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 296,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5157:13:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 297,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5157:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 298,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 285,
																"src": "5182:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5157:30:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 300,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5189:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 292,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5149:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 301,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5149:81:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 302,
												"nodeType": "ExpressionStatement",
												"src": "5149:81:1"
											},
											{
												"assignments": [
													304,
													306
												],
												"declarations": [
													{
														"constant": false,
														"id": 304,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5246:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 321,
														"src": "5241:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 303,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5241:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 306,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5268:10:1",
														"nodeType": "VariableDeclaration",
														"scope": 321,
														"src": "5255:23:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 305,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5255:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 313,
												"initialValue": {
													"arguments": [
														{
															"id": 311,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 283,
															"src": "5308:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 307,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 281,
																"src": "5282:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 308,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5282:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 310,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 309,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 285,
																"src": "5301:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5282:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 312,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5282:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5240:73:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 315,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 281,
															"src": "5357:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 316,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 304,
															"src": "5365:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 317,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 306,
															"src": "5374:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 318,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 287,
															"src": "5386:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 314,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 453,
														"src": "5330:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5330:69:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 291,
												"id": 320,
												"nodeType": "Return",
												"src": "5323:76:1"
											}
										]
									},
									"documentation": {
										"id": 279,
										"nodeType": "StructuredDocumentation",
										"src": "4718:237:1",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 322,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4969:21:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5008:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 322,
												"src": "5000:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 280,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5000:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5037:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 322,
												"src": "5024:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 282,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5024:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 285,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5059:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 322,
												"src": "5051:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 284,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5051:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 287,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5088:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 322,
												"src": "5074:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 286,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5074:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4990:116:1"
									},
									"returnParameters": {
										"id": 291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 322,
												"src": "5125:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 289,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5125:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5124:14:1"
									},
									"scope": 498,
									"src": "4960:446:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 338,
										"nodeType": "Block",
										"src": "5683:97:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 333,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 325,
															"src": "5719:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 334,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 327,
															"src": "5727:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 335,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5733:39:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 332,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															339,
															368
														],
														"referencedDeclaration": 368,
														"src": "5700:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 336,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5700:73:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 331,
												"id": 337,
												"nodeType": "Return",
												"src": "5693:80:1"
											}
										]
									},
									"documentation": {
										"id": 323,
										"nodeType": "StructuredDocumentation",
										"src": "5412:166:1",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 339,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5592:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 328,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 325,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5619:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 339,
												"src": "5611:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 324,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5611:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 327,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5640:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 339,
												"src": "5627:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 326,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5627:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5610:35:1"
									},
									"returnParameters": {
										"id": 331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 330,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 339,
												"src": "5669:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 329,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5669:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5668:14:1"
									},
									"scope": 498,
									"src": "5583:197:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 367,
										"nodeType": "Block",
										"src": "6122:168:1",
										"statements": [
											{
												"assignments": [
													352,
													354
												],
												"declarations": [
													{
														"constant": false,
														"id": 352,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6138:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 367,
														"src": "6133:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 351,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6133:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 354,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6160:10:1",
														"nodeType": "VariableDeclaration",
														"scope": 367,
														"src": "6147:23:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 353,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6147:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 359,
												"initialValue": {
													"arguments": [
														{
															"id": 357,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 344,
															"src": "6192:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 355,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 342,
															"src": "6174:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 356,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6174:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 358,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6174:23:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6132:65:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 361,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 342,
															"src": "6241:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 362,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 352,
															"src": "6249:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 363,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 354,
															"src": "6258:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 364,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 346,
															"src": "6270:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 360,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 453,
														"src": "6214:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 365,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6214:69:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 350,
												"id": 366,
												"nodeType": "Return",
												"src": "6207:76:1"
											}
										]
									},
									"documentation": {
										"id": 340,
										"nodeType": "StructuredDocumentation",
										"src": "5786:173:1",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 368,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5973:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 342,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6009:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 368,
												"src": "6001:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 341,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6001:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6038:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 368,
												"src": "6025:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 343,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6025:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 346,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6066:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 368,
												"src": "6052:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 345,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6052:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5991:93:1"
									},
									"returnParameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 368,
												"src": "6108:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 348,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6108:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6107:14:1"
									},
									"scope": 498,
									"src": "5964:326:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 384,
										"nodeType": "Block",
										"src": "6566:101:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 379,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 371,
															"src": "6604:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 380,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 373,
															"src": "6612:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 381,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6618:41:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 378,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															385,
															414
														],
														"referencedDeclaration": 414,
														"src": "6583:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 382,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6583:77:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 377,
												"id": 383,
												"nodeType": "Return",
												"src": "6576:84:1"
											}
										]
									},
									"documentation": {
										"id": 369,
										"nodeType": "StructuredDocumentation",
										"src": "6296:168:1",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 385,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6478:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 374,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 371,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6507:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "6499:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 370,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6499:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 373,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6528:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "6515:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 372,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6515:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6498:35:1"
									},
									"returnParameters": {
										"id": 377,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 376,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "6552:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 375,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6552:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6551:14:1"
									},
									"scope": 498,
									"src": "6469:198:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 413,
										"nodeType": "Block",
										"src": "7008:170:1",
										"statements": [
											{
												"assignments": [
													398,
													400
												],
												"declarations": [
													{
														"constant": false,
														"id": 398,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7024:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 413,
														"src": "7019:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 397,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7019:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 400,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7046:10:1",
														"nodeType": "VariableDeclaration",
														"scope": 413,
														"src": "7033:23:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 399,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7033:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 405,
												"initialValue": {
													"arguments": [
														{
															"id": 403,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 390,
															"src": "7080:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 401,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "7060:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 402,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7060:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7060:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7018:67:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 407,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "7129:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 408,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 398,
															"src": "7137:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 409,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 400,
															"src": "7146:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 410,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 392,
															"src": "7158:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 406,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 453,
														"src": "7102:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 411,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7102:69:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 396,
												"id": 412,
												"nodeType": "Return",
												"src": "7095:76:1"
											}
										]
									},
									"documentation": {
										"id": 386,
										"nodeType": "StructuredDocumentation",
										"src": "6673:175:1",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 414,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6862:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6900:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 414,
												"src": "6892:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6892:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6929:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 414,
												"src": "6916:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 389,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6916:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 392,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6957:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 414,
												"src": "6943:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 391,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6943:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6882:93:1"
									},
									"returnParameters": {
										"id": 396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 414,
												"src": "6994:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 394,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6994:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6993:14:1"
									},
									"scope": 498,
									"src": "6853:325:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 452,
										"nodeType": "Block",
										"src": "7660:434:1",
										"statements": [
											{
												"condition": {
													"id": 428,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 419,
													"src": "7674:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 450,
													"nodeType": "Block",
													"src": "8030:58:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 446,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 421,
																		"src": "8052:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 447,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 423,
																		"src": "8064:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 445,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 497,
																	"src": "8044:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 448,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8044:33:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 449,
															"nodeType": "ExpressionStatement",
															"src": "8044:33:1"
														}
													]
												},
												"id": 451,
												"nodeType": "IfStatement",
												"src": "7670:418:1",
												"trueBody": {
													"id": 444,
													"nodeType": "Block",
													"src": "7683:341:1",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 432,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 429,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 421,
																		"src": "7701:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 430,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7701:17:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 431,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7722:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7701:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 441,
															"nodeType": "IfStatement",
															"src": "7697:286:1",
															"trueBody": {
																"id": 440,
																"nodeType": "Block",
																"src": "7725:258:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 435,
																							"name": "target",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 417,
																							"src": "7927:6:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 434,
																						"name": "isContract",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 186,
																						"src": "7916:10:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																							"typeString": "function (address) view returns (bool)"
																						}
																					},
																					"id": 436,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "7916:18:1",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																					"id": 437,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "7936:31:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					},
																					"value": "Address: call to non-contract"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					}
																				],
																				"id": 433,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "7908:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 438,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7908:60:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 439,
																		"nodeType": "ExpressionStatement",
																		"src": "7908:60:1"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 442,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 421,
																"src": "8003:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 427,
															"id": 443,
															"nodeType": "Return",
															"src": "7996:17:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 415,
										"nodeType": "StructuredDocumentation",
										"src": "7184:277:1",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"
									},
									"id": 453,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "7475:26:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7519:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "7511:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 416,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7511:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 419,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7540:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "7535:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 418,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7535:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 421,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7570:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "7557:23:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 420,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7557:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7604:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "7590:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 422,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7590:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7501:121:1"
									},
									"returnParameters": {
										"id": 427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 426,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "7646:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 425,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7646:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7645:14:1"
									},
									"scope": 498,
									"src": "7466:628:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 476,
										"nodeType": "Block",
										"src": "8475:135:1",
										"statements": [
											{
												"condition": {
													"id": 465,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 456,
													"src": "8489:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 474,
													"nodeType": "Block",
													"src": "8546:58:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 470,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 458,
																		"src": "8568:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 471,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 460,
																		"src": "8580:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 469,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 497,
																	"src": "8560:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 472,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8560:33:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 473,
															"nodeType": "ExpressionStatement",
															"src": "8560:33:1"
														}
													]
												},
												"id": 475,
												"nodeType": "IfStatement",
												"src": "8485:119:1",
												"trueBody": {
													"id": 468,
													"nodeType": "Block",
													"src": "8498:42:1",
													"statements": [
														{
															"expression": {
																"id": 466,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 458,
																"src": "8519:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 464,
															"id": 467,
															"nodeType": "Return",
															"src": "8512:17:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 454,
										"nodeType": "StructuredDocumentation",
										"src": "8100:210:1",
										"text": " @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"
									},
									"id": 477,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "8324:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 456,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "8355:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "8350:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 455,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8350:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 458,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8385:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "8372:23:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 457,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8372:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8419:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "8405:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 459,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8405:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8340:97:1"
									},
									"returnParameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "8461:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 462,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8461:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8460:14:1"
									},
									"scope": 498,
									"src": "8315:295:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 496,
										"nodeType": "Block",
										"src": "8699:457:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 487,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 484,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 479,
															"src": "8775:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 485,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "8775:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 486,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8795:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8775:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 494,
													"nodeType": "Block",
													"src": "9105:45:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 491,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 481,
																		"src": "9126:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 490,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "9119:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 492,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9119:20:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 493,
															"nodeType": "ExpressionStatement",
															"src": "9119:20:1"
														}
													]
												},
												"id": 495,
												"nodeType": "IfStatement",
												"src": "8771:379:1",
												"trueBody": {
													"id": 489,
													"nodeType": "Block",
													"src": "8798:301:1",
													"statements": [
														{
															"AST": {
																"nodeType": "YulBlock",
																"src": "8956:133:1",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "8974:40:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nodeType": "YulIdentifier",
																					"src": "9003:10:1"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "8997:5:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8997:17:1"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nodeType": "YulTypedName",
																				"src": "8978:15:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "9042:2:1",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nodeType": "YulIdentifier",
																							"src": "9046:10:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "9038:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9038:19:1"
																				},
																				{
																					"name": "returndata_size",
																					"nodeType": "YulIdentifier",
																					"src": "9059:15:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9031:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9031:44:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9031:44:1"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "london",
															"externalReferences": [
																{
																	"declaration": 479,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9003:10:1",
																	"valueSize": 1
																},
																{
																	"declaration": 479,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9046:10:1",
																	"valueSize": 1
																}
															],
															"id": 488,
															"nodeType": "InlineAssembly",
															"src": "8947:142:1"
														}
													]
												}
											}
										]
									},
									"id": 497,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "8625:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 482,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 479,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8646:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 497,
												"src": "8633:23:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 478,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8633:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 481,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8672:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 497,
												"src": "8658:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 480,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8658:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8632:53:1"
									},
									"returnParameters": {
										"id": 483,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8699:0:1"
									},
									"scope": 498,
									"src": "8616:540:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 499,
							"src": "194:8964:1",
							"usedErrors": []
						}
					],
					"src": "101:9058:1"
				},
				"id": 1
			},
			"contracts/WalletV2.sol": {
				"ast": {
					"absolutePath": "contracts/WalletV2.sol",
					"exportedSymbols": {
						"Address": [
							498
						],
						"Initializable": [
							168
						],
						"Wallet": [
							541
						]
					},
					"id": 542,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 500,
							"literals": [
								"solidity",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "32:22:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/proxy/utils/Initializable.sol",
							"file": "@openzeppelin/contracts/proxy/utils/Initializable.sol",
							"id": 501,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 542,
							"sourceUnit": 169,
							"src": "55:63:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 502,
										"name": "Initializable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 168,
										"src": "139:13:2"
									},
									"id": 503,
									"nodeType": "InheritanceSpecifier",
									"src": "139:13:2"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 541,
							"linearizedBaseContracts": [
								541,
								168
							],
							"name": "Wallet",
							"nameLocation": "129:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "94033ebd",
									"id": 506,
									"mutability": "mutable",
									"name": "lastUsed",
									"nameLocation": "171:8:2",
									"nodeType": "VariableDeclaration",
									"scope": 541,
									"src": "159:24:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 504,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "159:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 505,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "182:1:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 511,
										"nodeType": "Block",
										"src": "233:8:2",
										"statements": []
									},
									"functionSelector": "8129fc1c",
									"id": 512,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 509,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 508,
												"name": "initializer",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 70,
												"src": "221:11:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "221:11:2"
										}
									],
									"name": "initialize",
									"nameLocation": "199:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 507,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "209:2:2"
									},
									"returnParameters": {
										"id": 510,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "233:0:2"
									},
									"scope": 541,
									"src": "190:51:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 531,
										"nodeType": "Block",
										"src": "312:48:2",
										"statements": [
											{
												"expression": {
													"id": 525,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 521,
														"name": "c",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 519,
														"src": "322:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 524,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 522,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 514,
															"src": "326:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 523,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 516,
															"src": "330:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "326:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "322:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 526,
												"nodeType": "ExpressionStatement",
												"src": "322:9:2"
											},
											{
												"expression": {
													"id": 529,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 527,
														"name": "lastUsed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 506,
														"src": "341:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 528,
														"name": "c",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 519,
														"src": "352:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "341:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 530,
												"nodeType": "ExpressionStatement",
												"src": "341:12:2"
											}
										]
									},
									"functionSelector": "771602f7",
									"id": 532,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "260:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 517,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 514,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "272:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 532,
												"src": "264:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 513,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "264:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 516,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "283:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 532,
												"src": "275:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 515,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "275:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "263:22:2"
									},
									"returnParameters": {
										"id": 520,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 519,
												"mutability": "mutable",
												"name": "c",
												"nameLocation": "309:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 532,
												"src": "301:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 518,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "301:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "300:11:2"
									},
									"scope": 541,
									"src": "251:109:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 539,
										"nodeType": "Block",
										"src": "389:29:2",
										"statements": [
											{
												"expression": {
													"id": 537,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 535,
														"name": "lastUsed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 506,
														"src": "399:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 536,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "410:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "399:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 538,
												"nodeType": "ExpressionStatement",
												"src": "399:12:2"
											}
										]
									},
									"functionSelector": "bc1b392d",
									"id": 540,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "zero",
									"nameLocation": "375:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "379:2:2"
									},
									"returnParameters": {
										"id": 534,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "389:0:2"
									},
									"scope": 541,
									"src": "366:52:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 542,
							"src": "120:300:2",
							"usedErrors": []
						}
					],
					"src": "32:388:2"
				},
				"id": 2
			}
		}
	}
}